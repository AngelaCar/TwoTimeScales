[{"path":"https://angelacar.github.io/TwoTimeScales/articles/TwoTimeScales.html","id":"data-reccolon2ts","dir":"Articles","previous_headings":"","what":"Data: reccolon2ts","title":"Introduction to TwoTimeScales","text":"use data clinical trial colon cancer effects two adjuvant therapies colon resection (Laurie et al. 1989; Moertel et al. 1995). original data included R-package survival (Therneau 2020), see help(survival::colon). Patients followed, resection colon, randomization one two treatment groups control group (treatment), death end study. two treatments either Levamisole, drug showing immunostimulatory activity, combination Levamisole Fluorouracil, moderately toxic chemotherapy agent. dataset colon contains 929 individuals, 468 (50.4%) experienced recurrence cancer follow-period. However, seven patients recurrence left risk set recorded time recurrence, leaving 461 followed . dataset reccolon2ts include 461 individuals. description data variables can accessed help(reccolon2ts). two time scales reccolon2ts data: time randomization death censoring, measured days since randomization reccolon2ts$timedc time since recurrence cancer reccolon2ts$timesr, also measured days. Additionally, consider another variable, measuring time randomization recurrence reccolon2ts$timer. latter time scale, fixed time covariate varies among individuals data. original dataset, individual enters risk set recurrence exact time recurrence. Therefore, individual’s observations left truncated. However, show model can easily incorporate left truncation, introduced artificial left truncated entry times 40 individuals dataset, reccolon2ts$entrys (time since recurrence scale), reccolon2ts$entryt (time since randomization scale). illustrate work package, clarification notation needed. two time scales model notation, indicate two time scales tt ss, fixed time entry process indicated uu. Whenever refer models one time scale , mostly consider time scale indicated ss (opposed common used notation tt). Therefore, functions require individual times inputs, required inputs indicated ss (rather tt).","code":"str(reccolon2ts) #> 'data.frame':    461 obs. of  25 variables: #>  $ id      : num  1 3 4 5 6 7 13 14 16 17 ... #>  $ study   : num  1 1 1 1 1 1 1 1 1 1 ... #>  $ rx      : Factor w/ 3 levels \"Obs\",\"Lev\",\"Lev+5FU\": 3 1 3 1 3 2 1 2 1 2 ... #>  $ sex     : Factor w/ 2 levels \"female\",\"male\": 2 1 1 2 1 2 2 2 2 2 ... #>  $ age     : num  43 71 66 69 57 77 64 68 68 62 ... #>  $ obstruct: num  0 0 1 0 0 0 0 1 0 1 ... #>  $ perfor  : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ adhere  : num  0 1 0 0 0 0 0 0 0 1 ... #>  $ nodes   : num  5 7 6 22 9 5 1 3 1 6 ... #>  $ status  : num  1 1 1 1 1 1 1 1 0 1 ... #>  $ differ  : Factor w/ 3 levels \"well\",\"moderate\",..: 2 2 2 2 2 2 2 2 2 2 ... #>  $ extent  : Factor w/ 4 levels \"submucosa\",\"muscle\",..: 3 2 3 3 3 3 3 3 3 3 ... #>  $ surg    : Factor w/ 2 levels \"short\",\"long\": 1 1 2 2 1 2 1 1 2 1 ... #>  $ node4   : num  1 1 1 1 1 1 0 0 0 1 ... #>  $ timedc  : num  1521 963 293 659 1767 ... #>  $ etype   : num  2 2 2 2 2 2 2 2 2 2 ... #>  $ timer   : num  968 542 245 523 904 ... #>  $ entrys  : num  0 0 0 0 0 0 0 0 0 88 ... #>  $ timesr  : num  553 421 48 136 863 ... #>  $ entryt  : num  968 542 245 523 904 ... #>  $ timedc_y: num  4.164 2.637 0.802 1.804 4.838 ... #>  $ timesr_y: num  1.514 1.153 0.131 0.372 2.363 ... #>  $ entrys_y: num  0 0 0 0 0 ... #>  $ entryt_y: num  2.65 1.484 0.671 1.432 2.475 ... #>  $ timer_y : num  2.65 1.484 0.671 1.432 2.475 ..."},{"path":"https://angelacar.github.io/TwoTimeScales/articles/TwoTimeScales.html","id":"step-1-data-preparation","dir":"Articles","previous_headings":"","what":"Step 1: data preparation","title":"Introduction to TwoTimeScales","text":"Time--event data come form time variable, indicated ss, s≥0s \\ge 0 variable contains event’s indicator. simplest time--event models, one type event, event’s indicator can assume values 0 1. apply PP-splines model hazard need bin individual data aggregated vectors exposure times events’ indicators. Therefore, first step analysis, data preparation. step involves construction bins actual binning data. steps implemented performed function prepare_data(), requires inputs individual data vectors, desired specification bins. function works way case data one time scale , data two time scales. difference inputs required cases. now illustrate use cases.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/articles/TwoTimeScales.html","id":"one-time-scale-only","dir":"Articles","previous_headings":"Step 1: data preparation","what":"One time scale only","title":"Introduction to TwoTimeScales","text":"data one time scale, function requires minimal inputs vector exit times (s_out), vector events’ indicators (events) desired bins’ size (ds). data left truncated, entry times can passed argument s_in. object dt1ts list two elements. first element list bins (bins_s) midpoints (mids) number bins (ns). second element list another list data binned, vector exposures called r vector events’ counts y. calling method print(dt1ts), obtain additional information data, range covered bins, total exposure time total number events.","code":"dt1ts <- prepare_data(s_in = reccolon2ts$entrys,                       s_out = reccolon2ts$timesr,                       events = reccolon2ts$status,                       ds = 30) str(dt1ts) #> List of 2 #>  $ bins   :List of 3 #>   ..$ bins_s: num [1:92] 0 30 60 90 120 150 180 210 240 270 ... #>   ..$ mids  : num [1:91] 15 45 75 105 135 165 195 225 255 285 ... #>   ..$ ns    : int 91 #>  $ bindata:List of 2 #>   ..$ r: num [1:91] 12613 12322 11793 11399 10969 ... #>   ..$ y: num [1:91] 14 24 16 11 24 22 20 10 24 26 ... #>  - attr(*, \"class\")= chr \"data2ts\"  print(dt1ts) #> An object of class 'data2ts' #>  #> Data: #> List of 2 #>  $ bins   :List of 3 #>  $ bindata:List of 2 #>  - attr(*, \"class\")= chr \"data2ts\" #> NULL #>  #> Range covered by the bins:  #> $bins_s #> [1]    0 2730 #>  #>  #> Number of bins:  #> $ns #> [1] 91 #>  #>  #> Overview of the binned data: #> [1] \"Total exposure time: 236006\" #>  #> [1] \"Total number of events: 409\""},{"path":"https://angelacar.github.io/TwoTimeScales/articles/TwoTimeScales.html","id":"two-time-scales","dir":"Articles","previous_headings":"Step 1: data preparation","what":"Two time scales","title":"Introduction to TwoTimeScales","text":"function used bin individual data two-dimensional grid rectangles (squares) uu ss, parallelograms Lexis diagram tt ss. two time scales model estimated half-plane (u,s)(u,s). Therefore, discuss preparation data uu ss, defer discussion preparation Lexis diagram vignette dedicated analysis two time scales. now included one additional input u, vector individuals’ time recurrence cancer. object dt2ts structure dt1ts, additional bins uu (bins_u, midu nu). data now matrices R Y dimension nu ns.","code":"dt2ts <- prepare_data(u = reccolon2ts$timer,                       s_in = reccolon2ts$entrys,                       s_out = reccolon2ts$timesr,                       events = reccolon2ts$status,                       ds = 30) str(dt2ts) #> List of 2 #>  $ bins   :List of 6 #>   ..$ bins_u: num [1:77] 8 38 68 98 128 158 188 218 248 278 ... #>   ..$ midu  : num [1:76] 23 53 83 113 143 173 203 233 263 293 ... #>   ..$ nu    : int 76 #>   ..$ bins_s: num [1:92] 0 30 60 90 120 150 180 210 240 270 ... #>   ..$ mids  : num [1:91] 15 45 75 105 135 165 195 225 255 285 ... #>   ..$ ns    : int 91 #>  $ bindata:List of 2 #>   ..$ R: num [1:76, 1:91] 115 218 450 696 474 701 460 686 462 457 ... #>   ..$ Y: num [1:76, 1:91] 1 1 0 1 1 2 1 1 1 2 ... #>  - attr(*, \"class\")= chr \"data2ts\"  print(dt2ts) #> An object of class 'data2ts' #>  #> Data: #> List of 2 #>  $ bins   :List of 6 #>  $ bindata:List of 2 #>  - attr(*, \"class\")= chr \"data2ts\" #> NULL #>  #> Range covered by the bins:  #> $bins_u #> [1]    8 2288 #>  #> $bins_s #> [1]    0 2730 #>  #>  #> Number of bins:  #> $nu #> [1] 76 #>  #> $ns #> [1] 91 #>  #>  #> Overview of the binned data: #> [1] \"Total exposure time: 236006\" #>  #> [1] \"Total number of events: 409\""},{"path":"https://angelacar.github.io/TwoTimeScales/articles/TwoTimeScales.html","id":"including-covariates","dir":"Articles","previous_headings":"Step 1: data preparation","what":"Including covariates","title":"Introduction to TwoTimeScales","text":"want estimate proportional hazard model covariates different structure data required (see Carollo et al. (2023)). data augmented one dimension. , model one time scale , need create matrix exposure times R dimension n (number individuals data) ns (number bins). goes matrix events’ count. model two time scales, observation sample represented matrix exposure times matrix events’ indicator. Therefore, data whole sample can arranged three-dimensional arrays, dimensions nu ns n. function prepare_data() exactly specifying optional input individual = TRUE. possible, recommended, provide covariates one wishes use PH model extra argument covs. function take care preparation regression matrix Z. However, desired, can also prepared externally (case warning returned). data now three-dimensional arrays, R Y regression matrix Z, covariates transformed dummy variables (needed). print method returns also names dummy variables, can see variable rx obtained two dummies Lev Lev+5FU variable sex obtained now dummy variable male (Obs female reference categories, well four nodes).","code":"covs <- subset(reccolon2ts, select = c(\"rx\", \"node4\", \"sex\")) dt2ts_cov <- prepare_data(u = reccolon2ts$timer,                           s_in = reccolon2ts$entrys,                           s_out = reccolon2ts$timesr,                           events = reccolon2ts$status,                           ds = 30,                           individual = TRUE,                            covs = covs) str(dt2ts_cov) #> List of 2 #>  $ bins   :List of 6 #>   ..$ bins_u: num [1:77] 8 38 68 98 128 158 188 218 248 278 ... #>   ..$ midu  : num [1:76] 23 53 83 113 143 173 203 233 263 293 ... #>   ..$ nu    : int 76 #>   ..$ bins_s: num [1:92] 0 30 60 90 120 150 180 210 240 270 ... #>   ..$ mids  : num [1:91] 15 45 75 105 135 165 195 225 255 285 ... #>   ..$ ns    : int 91 #>  $ bindata:List of 3 #>   ..$ R: num [1:76, 1:91, 1:461] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Y: num [1:76, 1:91, 1:461] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ Z: num [1:461, 1:4] 0 0 0 0 0 1 0 1 0 1 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:4] \"Lev\" \"Lev_5FU\" \"node4\" \"male\" #>  - attr(*, \"class\")= chr \"data2ts\" print(dt2ts_cov) #> An object of class 'data2ts' #>  #> Data: #> List of 2 #>  $ bins   :List of 6 #>  $ bindata:List of 3 #>  - attr(*, \"class\")= chr \"data2ts\" #> NULL #>  #> Range covered by the bins:  #> $bins_u #> [1]    8 2288 #>  #> $bins_s #> [1]    0 2730 #>  #>  #> Number of bins:  #> $nu #> [1] 76 #>  #> $ns #> [1] 91 #>  #>  #> Overview of the binned data: #> [1] \"Total exposure time: 236006\" #>  #> [1] \"Total number of events: 409\" #>  #> Covariates: #> [1] \"Lev\"     \"Lev_5FU\" \"node4\"   \"male\""},{"path":[]},{"path":"https://angelacar.github.io/TwoTimeScales/articles/TwoTimeScales.html","id":"one-time-scale","dir":"Articles","previous_headings":"Step 2: Estimation","what":"One time scale","title":"Introduction to TwoTimeScales","text":"estimate model use function fit1ts(). input function pass object returned prepare_data. Without specifying additional parameters, function estimates PP-splines model, using numerical optimization AIC find optimal smoothing parameter. BB-splines basis built using default options (see help(fit1ts) details). However, illustration, now show specify BB-splines basis closely match data structure. , specify cubic (bdeg = 3) BB-splines basis covers range ss 0 2730 days (min_s max_s respectively), built 20 segments (nseg_s = 20). object returned fit1ts class \"haz1ts\". first element list results optimal model. second element optimal smoothing parameter (log10\\log_{10}-scale) last element penalty matrix, incorporates optimal value 𝜚\\varrho, P_optim. vignette Smooth hazards one time scale discusses alternative options estimation, particular concerning search optimal smoothing parameter.","code":"m1ts <- fit1ts(data1ts = dt1ts,                Bbases_spec = list(bdeg = 3,                                   nseg_s = 20,                                   min_s = 0,                                   max_s = 2730)) str(m1ts) #> List of 3 #>  $ optimal_model :List of 9 #>   ..$ alpha   : num [1:23, 1] -6.69 -6.51 -6.34 -6.2 -6.14 ... #>   ..$ SE_alpha: num [1:23] 0.2264 0.1228 0.0761 0.0741 0.0794 ... #>   ..$ eta     : num [1:91, 1] -6.5 -6.46 -6.42 -6.38 -6.35 ... #>   ..$ H       : num [1:23, 1:23] 0.07393 0.04624 0.02013 0.00333 -0.00356 ... #>   ..$ deviance: num 79.5 #>   ..$ ed      : num 4.23 #>   ..$ aic     : num 88 #>   ..$ bic     : num 98.6 #>   ..$ Bbases  :List of 1 #>   .. ..$ Bs: num [1:91, 1:23] 1.18e-01 5.02e-02 1.52e-02 2.05e-03 2.21e-07 ... #>   .. .. ..- attr(*, \"x\")= num [1:91] 15 45 75 105 135 165 195 225 255 285 ... #>   .. .. ..- attr(*, \"xl\")= num 0 #>   .. .. ..- attr(*, \"xr\")= num 2730 #>   .. .. ..- attr(*, \"nseg\")= num 20 #>   .. .. ..- attr(*, \"bdeg\")= num 3 #>   .. .. ..- attr(*, \"type\")= chr \"bbase\" #>  $ optimal_logrho: num 2.03 #>  $ P_optim       : num [1:23, 1:23] 108 -216 108 0 0 ... #>  - attr(*, \"class\")= chr \"haz1ts\""},{"path":"https://angelacar.github.io/TwoTimeScales/articles/TwoTimeScales.html","id":"two-time-scales-1","dir":"Articles","previous_headings":"Step 2: Estimation","what":"Two time scales","title":"Introduction to TwoTimeScales","text":"Estimation (u,s)(u,s)-plane performed way. , illustrate use function fit2ts(), change default specifications marginal BB-spline bases, otherwise use default values remaining inputs. Whereas estimates fit1ts vectors, ones fit2ts organized matrices: matrix optimal_model$Alpha, containing estimated BB-splines’ coefficients αlm\\alpha_{lm}, l∈1,…,cul \\1,\\dots,c_u (cu=19c_u = 19) m∈1,…,csm \\1,\\dots, c_s (cs=23c_s = 23). matrix Eta dimension nun_u nsn_s (90 91). Additionally, list marginal BB-splines used estimation (optimal_model$Bbases), vector log10𝜚u\\log_{10}\\varrho_u log10𝜚s\\log_{10}\\varrho_s values (optimal_logrho) finally penalty matrix (P_optim) incorporates optimal penalty parameters. summary method implemented objects class haz2ts, returns model specifications, optimal smoothing parameters, effective dimension (ED) model fit measured AIC BIC model.","code":"m2ts <- fit2ts(data2ts = dt2ts,                Bbases_spec = list(bdeg = 3,                                   nseg_s = 20,                                   min_s = 0,                                   max_s = 2730,                                   nseg_u = 16,                                   min_u = 0,                                   max_u = 2300)) summary(m2ts) #> Model specifications: #>   number of events =  409  #>   nu =  76  #>   ns =  91  #>   cu =  19  #>   cs =  23  #>  #> Optimal smoothing:  #>   log10(rho_u) =  1.57596  #>   log10(rho_s) =  0.4531702  #>   rho_u =  37.66688  #>   rho_s =  2.839032  #>  #> Model with no covariates #>  #> Model fit:  #>   AIC =  1245.026  #>   BIC =  1319.057  #>   ED =  12.62961"},{"path":[]},{"path":"https://angelacar.github.io/TwoTimeScales/articles/TwoTimeScales.html","id":"one-time-scale-1","dir":"Articles","previous_headings":"Step 3: Visualize the results","what":"One time scale","title":"Introduction to TwoTimeScales","text":"model estimated, can represent results function plot().minimal input plot() fitted model. , show evaluate BB-splines basis finer grid intervals 10 days apart (opposite 30, option used estimating BB-splines). Moreover, pass inputs graphical parameters obtain nicer plot. result plot one-dimensional hazard curve ss (time since recurrence), accompany 95% confidence bands.","code":"plot(x = m1ts,      plot_grid = c(\"smin\" = 0, \"smax\" = 2730, \"ds\" = 10),      plot_options= list(        col = \"darkblue\",        main = \"Hazard\",        ylab = \"hazard\",        xlab = \"time since recurrence\",        cex_main = 1))"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/TwoTimeScales.html","id":"two-time-scales-2","dir":"Articles","previous_headings":"Step 3: Visualize the results","what":"Two time scales","title":"Introduction to TwoTimeScales","text":"several options represent smooth hazard two time scales. , present simple, yet informative, way, also default plot returned function plot(), applied object class \"haz2ts\". surface plot hazard (u,s)(u,s)-plane white contour lines. provide vignette focus visualization hazard two time scales Visualize hazards two time scales.","code":"plot(x = m2ts,      plot_grid = list(c(\"umin\" = 0, \"umax\" = 2300, \"du\" = 10),                       c(\"smin\" = 0, \"smax\" = 2730, \"ds\" = 10)),      plot_options= list(        main = \"Bi-dimensional hazard\",        ylab = \"time since recurrence\",        xlab = \"time since randomization\",        cex_main = 1))"},{"path":[]},{"path":"https://angelacar.github.io/TwoTimeScales/articles/onetime.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"Smooth hazards with one time scale","text":"first step analysis, data preparation. Data wide format, one row patient. estimate PP-spline model hazard need bin individual data, exposure times event counts, many small bins equal size, cover whole range values time scale. Data preparation involves construction bins actual binning data. steps implemented performed function prepare_data(), requires inputs individual data vectors desired specification bins. function returns object type data2ts.print method can used analyse structure resulting object. First, show function works minimal input (, using default values optional parameter): function requires minimal inputs vector exit times (s_out), vector event’s indicators (events) desired bins’ size (ds). object dt1ts list two elements. first element list bins (bins_s) midpoints (mids) total number bins (ns). second element list another list data binned, vector exposure times called r vector counts events y. notice calling generated message s_in = NULL. use s_in = 0 observations.; message informing user vector entry times provided. assumed entry times left truncated (everyone observed beginning process), considering s_in = 0 therefore correct. explained introductory vignette, included artificial left truncated times entry risk set. fact, use variable includes left truncation, message disappears: Without specifying additional inputs, constructions bins done covering minimum range values time scale, bins desired size ds. can change width bins changing argument ds. example, following code builds one bin 90 days, approximately 3 months. consequence, number bins 3 times less previous case. also possible specify minimum maximum values bins. option can helpful , example, event times left-truncated still desirable bins starting 0. Now 100 bins created, spanning range 0 days 3000 days follow-. aim analysis estimate proportional hazard model, different structure data required (Carollo et al. (2023)). particular, one time scale considered, need create matrix exposure times R dimension n (number individuals data) ns (number bins). Similarly matrix event counts. function prepare_data() returns data structure specifying optional input individual = TRUE. possible, recommended, provide covariates one wishes use PH model extra argument covs. function take care preparation regression matrix Z. However, desired, can also prepared externally (case warning returned). print(dt1ts_cov), see 4 covariates included Z regression matrix. variable \"rx\" includes 3 categories, therefore represented regression matrix two dummy variables (\"Lev\" \"Lev+5FU\").","code":"dt1ts <- prepare_data(s_out = reccolon2ts$timesr,                       events = reccolon2ts$status,                       ds = 30) #> `s_in = NULL`. I will use `s_in = 0` for all observations. str(dt1ts) #> List of 2 #>  $ bins   :List of 3 #>   ..$ bins_s: num [1:92] 0 30 60 90 120 150 180 210 240 270 ... #>   ..$ mids  : num [1:91] 15 45 75 105 135 165 195 225 255 285 ... #>   ..$ ns    : int 91 #>  $ bindata:List of 2 #>   ..$ r: num [1:91] 13674 13070 12474 12002 11534 ... #>   ..$ y: num [1:91] 14 24 16 11 24 22 20 10 24 26 ... #>  - attr(*, \"class\")= chr \"data2ts\" print(dt1ts) #> An object of class 'data2ts' #>  #> Data: #> List of 2 #>  $ bins   :List of 3 #>  $ bindata:List of 2 #>  - attr(*, \"class\")= chr \"data2ts\" #> NULL #>  #> Range covered by the bins:  #> $bins_s #> [1]    0 2730 #>  #>  #> Number of bins:  #> $ns #> [1] 91 #>  #>  #> Overview of the binned data: #> [1] \"Total exposure time: 246018\" #>  #> [1] \"Total number of events: 409\" dt1ts_lt <- prepare_data(s_in = reccolon2ts$entrys,                          s_out = reccolon2ts$timesr,                          events = reccolon2ts$status,                          ds = 30) dt1ts_lt2 <- prepare_data(s_in = reccolon2ts$entrys,                           s_out = reccolon2ts$timesr,                           events = reccolon2ts$status,                           ds = 90) dt1ts_lt2$bins$ns #> [1] 31 range(reccolon2ts$timesr) #> [1]    3 2725 dt1ts_2 <- prepare_data(s_in = reccolon2ts$entrys,                         s_out = reccolon2ts$timesr,                         events = reccolon2ts$status,                         ds = 30, min_s = 0, max_s = 3000)  str(dt1ts_2) #> List of 2 #>  $ bins   :List of 3 #>   ..$ bins_s: num [1:101] 0 30 60 90 120 150 180 210 240 270 ... #>   ..$ mids  : num [1:100] 15 45 75 105 135 165 195 225 255 285 ... #>   ..$ ns    : int 100 #>  $ bindata:List of 2 #>   ..$ r: num [1:100] 12613 12322 11793 11399 10969 ... #>   ..$ y: num [1:100] 14 24 16 11 24 22 20 10 24 26 ... #>  - attr(*, \"class\")= chr \"data2ts\" covs <- subset(reccolon2ts, select = c(\"rx\", \"node4\", \"sex\")) dt1ts_cov <- prepare_data(s_in = reccolon2ts$entrys,                           s_out = reccolon2ts$timesr,                           events = reccolon2ts$status,                           ds = 30,                           individual = TRUE,                            covs = covs) print(dt1ts_cov) #> An object of class 'data2ts' #>  #> Data: #> List of 2 #>  $ bins   :List of 3 #>  $ bindata:List of 3 #>  - attr(*, \"class\")= chr \"data2ts\" #> NULL #>  #> Range covered by the bins:  #> $bins_s #> [1]    0 2730 #>  #>  #> Number of bins:  #> $ns #> [1] 91 #>  #>  #> Overview of the binned data: #> [1] \"Total exposure time: 236006\" #>  #> [1] \"Total number of events: 409\" #>  #> Covariates: #> [1] \"Lev\"     \"Lev_5FU\" \"node4\"   \"male\""},{"path":"https://angelacar.github.io/TwoTimeScales/articles/onetime.html","id":"estimation","dir":"Articles","previous_headings":"","what":"Estimation","title":"Smooth hazards with one time scale","text":"First, show estimate model without covariates. proportional hazard model introduced second step. function estimates model fit1ts(), wrap around several functions, performing estimation. estimation done two steps: First, given set values smoothing parameter, one single starting value, search model minimum AIC (BIC) performed. model minimum AIC (BIC) identified, optimal smoothing parameter selected optimal model finally estimated. details argument fit1ts() refer manual function documentation, can accessed help(\"fit1ts\"). , show modify different arguments estimate one time scale model different ways. required argument data1ts, object returned function prepare_data(), seen previous section. argument, argument passed fit1ts(), estimation performed default options. scenarios, user want use prepare_data() perform data preparation directly pass output prepare_data() fit1ts(). However, available data already aggregated vectors event’s counts exposure times, user can pass arguments fit1ts(), y r respectively. case necessary provide values bins , important three arguments provided length y, r bins$mids . First, pass argument object dt1ts, created . , show, illustration, estimates α\\alpha obtained pass arguments y, r bins, taken object. object returned fit1ts() class \"haz1ts\". first element list results optimal model. second element optimal smoothing parameter (log10\\log_{10}-scale) last element penalty matrix P_optim, incorporating optimal value 𝜚\\varrho. following examples show modify arguments function, obtain slightly different model’s specification. results shown , encourage reader run examples console. Finally, demonstrate plot AIC BIC curves, mark optimal values smoothing parameter, extract AIC BIC vectors grid search optimal smoothing parameter.  notice , data grid log10(𝜚)\\log_{10}(\\varrho) values, BIC criterion selects larger smoothing parameter AIC. behavior well known, BIC penalizes differences neighboring coefficients strongly AIC, leading smoother results. Finally, estimate PH model including covariates rx, node4 sex, see extract estimates regression parameters β\\betas. next section, show get estimates (log-)hazard curve one time scale, using BB-splines basis estimation, evaluating old basis denser grid. also see obtain estimates hazard ratios, steps can performed jointly plotted using function plot().","code":"# Model 1 - Default parameters (numerical optimization of aic, default param for #                               B-splines) m1 <- fit1ts(data1ts = dt1ts) # Model 2 - Single data inputs m2 <- fit1ts(y = dt1ts$bindata$y, r = dt1ts$bindata$r, bins = dt1ts$bins)  table(m1$optimal_model$alpha == m2$optimal_model$alpha) #>  #> TRUE  #>   13 str(m1) #> List of 3 #>  $ optimal_model :List of 9 #>   ..$ alpha   : num [1:13, 1] -6.96 -6.57 -6.22 -6.14 -6.28 ... #>   ..$ SE_alpha: num [1:13] 0.3466 0.1197 0.0893 0.0983 0.1221 ... #>   ..$ eta     : num [1:91, 1] -6.55 -6.51 -6.48 -6.44 -6.4 ... #>   ..$ H       : num [1:13, 1:13] 0.16707 0.0782 0.00508 -0.01083 -0.00517 ... #>   ..$ deviance: num 79.8 #>   ..$ ed      : num 4.04 #>   ..$ aic     : num 87.9 #>   ..$ bic     : num 98.1 #>   ..$ Bbases  :List of 1 #>   .. ..$ Bs: num [1:91, 1:13] 0.1407 0.0971 0.0636 0.0388 0.0215 ... #>   .. .. ..- attr(*, \"x\")= num [1:91] 15 45 75 105 135 165 195 225 255 285 ... #>   .. .. ..- attr(*, \"xl\")= num 0 #>   .. .. ..- attr(*, \"xr\")= num 2730 #>   .. .. ..- attr(*, \"nseg\")= num 10 #>   .. .. ..- attr(*, \"bdeg\")= num 3 #>   .. .. ..- attr(*, \"type\")= chr \"bbase\" #>  $ optimal_logrho: num 1.13 #>  $ P_optim       : num [1:13, 1:13] 13.4 -26.8 13.4 0 0 ... #>  - attr(*, \"class\")= chr \"haz1ts\" # Model 3 - Change specifications of the B-splines (degree, number of segments  #                                                   and range) m3 <- fit1ts(data1ts = dt1ts,              Bbases_spec = list(bdeg = 2,          # quadratic B-splines                                 nseg_s = 20,       # 20 segments                                 min_s = 0,                                          max_s = 2730))  # Model 4 - As m3, but change penalty order m4 <- fit1ts(data1ts = dt1ts,              Bbases_spec = list(bdeg = 2,                                 nseg_s = 20,                                 min_s = 0,                                 max_s = 2730),              pord = 3)                             # third-degree penalty  # Model 5 - As m3, but change optimization method to grid_search m5 <- fit1ts(data1ts = dt1ts,              Bbases_spec = list(bdeg = 2,                                 nseg_s = 20,                                 min_s = 0,                                 max_s = 2730),              optim_method = \"grid_search\")         # search for optimal smoothing                                                                       over grid of values  # Model 6 - As m5, but optimization criterion is \"bic\" and include grid of  #           values for log_10(rho) m6 <- fit1ts(data1ts = dt1ts,              Bbases_spec = list(bdeg = 2,                                 nseg_s = 20,                                 min_s = 0,                                 max_s = 2730),              optim_method = \"grid_search\",              optim_criterion = \"bic\",              # use BIC rather than AIC              lrho = seq(-2, 3, by=.2))             # provide grid for log_10(rho) par(mfrow = c(1,2)) m6 <- fit1ts(data1ts = dt1ts,              Bbases_spec = list(bdeg = 2,                                 nseg_s = 20,                                 min_s = 0,                                 max_s = 2730),              optim_method = \"grid_search\",              optim_criterion = \"bic\",              lrho = seq(-1, 3, by=.2),              par_gridsearch = list(                plot_aic = T,                plot_bic = T,                mark_optimal = T              )) par(mfrow = c(1,1)) m6.aic <- m6$AIC m6.bic <- m6$BIC  m6.aic[1:6]; m6.bic[1:6] #> [1] 97.67005 96.78100 95.81061 94.79922 93.79740 92.84326 #> [1] 135.6309 132.7852 129.7015 126.4681 123.1973 119.9904 m7 <- fit1ts(data1ts = dt1ts_cov,              Bbases_spec = list(nseg_s = 15,                                 min_s = 0,                                 max_s = 2730)) betas <- m7$optimal_model$beta betas #>        Lev    Lev_5FU      node4       male  #> 0.07875398 0.27900614 0.50543144 0.21322565"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/onetime.html","id":"presenting-the-results-of-the-smooth-one-time-scale-hazard-model","dir":"Articles","previous_headings":"","what":"Presenting the results of the smooth one time scale hazard model","title":"Smooth hazards with one time scale","text":"explore several options presentation results one time scale model, using last model estimated previous section, included four covariates. object returned fit1ts() provides estimates parameters BB-splines, vector α̂\\hat{\\alpha} values, estimates covariates’ effects, vector β̂\\hat{\\beta} values. hazard obtained α̂\\hat{\\alpha} multiplying coefficient corresponding BB-spline, summing contributions scaled BB-spline specific point finally exponentiating result: λ̂=exp{∑k=1nsbklαl}.\\hat\\lambda = \\exp\\left\\{\\sum^{n_s}_{k=1} b_{kl}\\alpha_l\\right\\}. function get_hazard_1d() returns vector estimates (log-)hazard, associated standard errors, given input object returned fit1ts() , optionally, list specifications evaluating BB-splines basis new grid. applied PH model, returns baseline hazard. show provide specifications BB-splines use function get_hazard_1d(). evaluate BB-splines basis finer grid, distance bins 10 days. calls returns list several elements: new grid plotting new_plot_grid, vector hazard values hazard, vector log-hazard values loghazard , vector log10log_{10}-hazard values log10hazard three vectors associated standard errors, respectively SE_hazard, SE_loghazard ans SE_log10hazard. hazard ratios standard errors obtained calling function get_hr: possible call two functions independently use resulting objects create plot results. However, exactly done method plot(), implemented objects class \"haz1ts\".  simple call produces, PH model, plot baseline hazard curve. Now interpolate BB-spline basis denser plotting grid, change parameters obtain nicer plot.  hazard can also plotted log-scale, setting argument plot_options$loghazard = TRUE:  can also plot covariates’ effects calling:  call plots point estimates β\\beta parameters 95% confidence intervals. Alternatively, can decide plot estimated hazard ratios, confidence intervals. two options regarding confidence intervals HRs: First, can use delta method find confidence intervals symmetric around HRs estimates. Second, can exponentiate confidence intervals β\\beta parameters, therefore obtain non-symmetric (always positive) confidence intervals HRs. show options :  Finally, possible change level confidence CIs. following show three different levels β\\beta.","code":"basehaz <- get_hazard_1d(fitted_model = m7,                          plot_grid = c(\"smin\" = 0, \"smax\" = 2730, \"ds\" = 10))  str(basehaz) #> List of 7 #>  $ new_plot_grid :List of 4 #>   ..$ ints: num [1:274] 0 10 20 30 40 50 60 70 80 90 ... #>   ..$ smin: Named num 0 #>   .. ..- attr(*, \"names\")= chr \"smin\" #>   ..$ smax: Named num 2730 #>   .. ..- attr(*, \"names\")= chr \"smax\" #>   ..$ ds  : Named num 10 #>   .. ..- attr(*, \"names\")= chr \"ds\" #>  $ hazard        : num [1:274, 1] 0.00095 0.000964 0.000978 0.000992 0.001007 ... #>  $ loghazard     : num [1:274, 1] -6.96 -6.94 -6.93 -6.92 -6.9 ... #>  $ log10hazard   : num [1:274, 1] -3.02 -3.02 -3.01 -3 -3 ... #>  $ SE_hazard     : num [1:274, 1] 0.000169 0.000168 0.000166 0.000165 0.000164 ... #>  $ SE_loghazard  : num [1:274, 1] 0.178 0.174 0.17 0.166 0.163 ... #>  $ SE_log10hazard: num [1:274, 1] 0.0775 0.0756 0.0738 0.0721 0.0706 ... range(basehaz$hazard) #> [1] 0.0001911339 0.0015170876 hr <- get_hr(fitted_model = m7)  hr$HR #>      Lev  Lev_5FU    node4     male  #> 1.081938 1.321815 1.657701 1.237664 plot(m7) plot(m7,      plot_grid = c(\"smin\" = 0, \"smax\" = 2730, \"ds\" = 10),      plot_options= list(        col = \"purple\",        main = \"Baseline hazard\",        ylab = \"hazard\",        xlab = \"time since recurrence\",        cex_main = 1)) plot(m7,      plot_grid = c(\"smin\" = 0, \"smax\" = 2730, \"ds\" = 10),      plot_options= list(        loghazard = TRUE,        col = \"purple\",        main = \"Baseline hazard\",        ylab = \"log-hazard\",        xlab = \"time since recurrence\",        cex_main = 1)) plot(m7,      which_plot = \"covariates\") par(mfrow = c(1,2),     font.main = 1) # Option 1: symmetric CIs with delta method plot(m7,      which_plot = \"covariates\",      plot_options = list(        HR = T,        symmetric_CI = T,        ylim = c(0.8, 2.1),        main = \"HR with symmetric CIs\",        cex_main = 1      )) abline(h=1, lty=2, col=\"grey\") # Option 2: non-symmetric CIs  plot(m7,      which_plot = \"covariates\",      plot_options = list(        HR = T,        symmetric_CI = F,        ylim = c(0.8, 2.1),        main = \"HR with non-symmetric CIs\",        cex_main = 1      )) abline(h=1, lty=2, col=\"grey\") par(mfrow = c(1,1)) par(mfrow = c(1,3),     font.main = 1) plot(m7,      which_plot = \"covariates\",      plot_options = list(        ylim = c(-0.22, 0.8),        main = \"95% CIs\",        cex_main = 1      )) abline(h=0, lty=2, col=\"grey\") plot(m7,      which_plot = \"covariates\",      plot_options = list(        ylim = c(-0.22, 0.8),        confidence = .90,        main = \"90% CIs\",        cex_main = 1      )) abline(h=0, lty=2, col=\"grey\") plot(m7,      which_plot = \"covariates\",      plot_options = list(        ylim = c(-0.22, 0.8),        confidence = .99,        main = \"99% CIs\",        cex_main = 1      )) abline(h=0, lty=2, col=\"grey\") par(mfrow = c(1,1))"},{"path":[]},{"path":"https://angelacar.github.io/TwoTimeScales/articles/twotimes.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Smooth hazards with two time scales","text":"vignette focuses analysis time--event data two time scales. show use functions package TwoTimeScales different options. particular show: bin data (u,s)(u,s)- (t,s)(t,s)-plane bin data covariates presents perform grid search optimal couple smoothing parameters plot AIC BIC grid perform numerical optimization model use functionalities LMMsolver package find optimal smoothing parameters estimate model covariates vignette deal visualization estimated smooth hazard two time scales. Visualization topic vignette Visualize hazards two time scales. assume reader vignette familiarity model, basic functions package introduced Introduction TwoTimeScales. full exposition model, refer Carollo et al. (2023). following, analyse dataset reccolon2ts, includes data patients recurrence colon cancer. first part vignette deals model without covariates, proportional hazards model analysis follows second part.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/articles/twotimes.html","id":"hazard-of-death-by-time-since-randomization-and-time-since-recurrence","dir":"Articles","previous_headings":"","what":"Hazard of death by time since randomization and time since recurrence","title":"Smooth hazards with two time scales","text":"two time variables tt = time since randomization ss = time since recurrence. Additionally, uu = time recurrence, fixed time entry risk set recorded number days randomization recurrence. analysis performed (u,s)(u,s)-plane, need bin data uu ss. consider bins width 30 days axes, obtain 77 bins uu axis 9191 bins ss axis. , use artificially created left truncated entry times ss axis, therefore function returns message informing user entry time 0 imputed observations. prepared data can estimate model. analysis presented Carollo et al. (2023), build 23 BB-splines two dimensions, total 529 α\\alpha parameters. optimal smoothing parameters chosen numerical optimization AIC model function smoothing parameters. use cubic BB-splines bases second order penalty. explicitly specify parameters, even though default options. object returned fit2ts() class \"haz2ts\". optimal smoothing parameters 𝜚u=102.4\\varrho_u = 10^{2.4} 𝜚s=100.3\\varrho_s=10^{0.3}, effective dimension model 11.1. can change optimization criterion BIC, compare results terms smoothing parameters effective dimensions: expected, choosing BIC optimization criterion results larger smoothing parameters smaller effective dimension, BIC penalizes model complexity strongly AIC. following code-chunk shows use grid search method select optimal pair smoothing parameters time produce plots AIC BIC values grid log10\\log_{10} values smoothing parameters. evaluate code chunk can time consuming, encourage readers run code console. Alternatively, can ask function return matrices AIC /BIC values part fitted object plot separately (shown). Lastly, show fit model using package LMMsolver Martin P. Boer (2023), uses connection linear mixed models P-splines, uses sparse representation speed-calculations. possible fit model using function fit2ts() specifying option optim_method = \"LMMsolver\". returns object class haz2tsLMM, differ structure objects class haz2ts, methods implemented. Note: functions LMMsolver needed fit two time scales hazard model incorporated TwoTimeScales package. Nevertheless, recommend interested readers check excellent R-package LMMsolver accompanying webpage: https://biometris.github.io/LMMsolver/","code":"dt2ts <- prepare_data(u = reccolon2ts$timer,                       s_out = reccolon2ts$timesr,                       events = reccolon2ts$status,                       ds = 30, du = 30) #> `s_in = NULL`. I will use `s_in = 0` for all observations. #> `s_in = NULL`. I will use `s_in = 0` for all observations. print(dt2ts) #> An object of class 'data2ts' #>  #> Data: #> List of 2 #>  $ bins   :List of 6 #>  $ bindata:List of 2 #>  - attr(*, \"class\")= chr \"data2ts\" #> NULL #>  #> Range covered by the bins:  #> $bins_u #> [1]    8 2288 #>  #> $bins_s #> [1]    0 2730 #>  #>  #> Number of bins:  #> $nu #> [1] 76 #>  #> $ns #> [1] 91 #>  #>  #> Overview of the binned data: #> [1] \"Total exposure time: 246018\" #>  #> [1] \"Total number of events: 409\" mod1 <- fit2ts(data2ts = dt2ts,                Bbases_spec = list(bdeg = 3,                                   nseg_s = 20,                                   min_s = 0,                                   max_s = 2730,                                   nseg_u = 20,                                   min_u = 0,                                   max_u = 2300),                pord = 2,                optim_method = \"ucminf\",                optim_criterion = \"aic\") summary(mod1) #> Model specifications: #>   number of events =  409  #>   nu =  76  #>   ns =  91  #>   cu =  23  #>   cs =  23  #>  #> Optimal smoothing:  #>   log10(rho_u) =  2.402208  #>   log10(rho_s) =  0.3102949  #>   rho_u =  252.4691  #>   rho_s =  2.043125  #>  #> Model with no covariates #>  #> Model fit:  #>   AIC =  1249.297  #>   BIC =  1314.656  #>   ED =  11.13921 mod2 <- fit2ts(data2ts = dt2ts,                Bbases_spec = list(bdeg = 3,                                   nseg_s = 20,                                   min_s = 0,                                   max_s = 2730,                                   nseg_u = 20,                                   min_u = 0,                                   max_u = 2300),                pord = 2,                optim_method = \"ucminf\",                optim_criterion = \"bic\")  mod2$optimal_logrho #> [1] 5.785580 1.521686 mod2$optimal_model$ed #> [1] 5.501157 mod3 <- fit2ts(data2ts = dt2ts,                Bbases_spec = list(bdeg = 3,                                   nseg_s = 20,                                   min_s = 0,                                   max_s = 2730,                                   nseg_u = 20,                                   min_u = 0,                                   max_u = 2300),                optim_method = \"grid_search\",                optim_criterion = \"aic\",                lrho = list(seq(-1, 3, by=.2),                            seq(-1, 3, by = .2)),                par_gridsearch = list(                  plot_aic = T,                  plot_bic = T,                  mark_optimal = T,                  plot_contour = T                )) mod_LMM <- fit2ts(data2ts = dt2ts,                   Bbases_spec = list(bdeg = 3,                                      nseg_s = 20,                                      min_s = 0,                                      max_s = 2730,                                      nseg_u = 20,                                      min_u = 0,                                      max_u = 2300),                   pord = 2,                   optim_method = \"LMMsolver\",                   optim_criterion = \"aic\") summary(mod_LMM) #> Model specifications: #>   number of events =  409  #>   nu =  76  #>   ns =  91  #>   cu =  23  #>   cs =  23  #>  #> Optimal smoothing:  #>   log10(rho_u) =  2.14465  #>   log10(rho_s) =  0.5217892  #>   rho_u =  139.5243  #>   rho_s =  3.324981  #>  #> Model with no covariates #>  #> Model fit:  #>   AIC =  1249.449  #>   BIC =  1314.151  #>   ED =  11.02726"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/twotimes.html","id":"ph-regression-for-the-colon-cancer-data","dir":"Articles","previous_headings":"","what":"PH regression for the colon cancer data","title":"Smooth hazards with two time scales","text":"first show prepare data analysis covariates, see need modify estimation command, function fit2ts() automatically recognizes data object includes covariates’ matrix correctly estimates GLAM PH model. prepare covariates’ matrix, need pass matrix individual values covariates, argument covs prepare_data. subsetting dataset selecting desired covariates. , pass object d2ts_cov fit2ts() arguments . show fitted object , encourage readers run code console.","code":"covs <- subset(reccolon2ts, select = c(\"rx\", \"sex\", \"adhere\", \"obstruct\", \"node4\")) dt2ts_cov <- prepare_data(u = reccolon2ts$timer,                           s_out = reccolon2ts$timesr,                           events = reccolon2ts$status,                           ds = 30,                           individual = TRUE,                            covs = covs) #> `s_in = NULL`. I will use `s_in = 0` for all observations. #> `s_in = NULL`. I will use `s_in = 0` for all observations. print(dt2ts_cov) #> An object of class 'data2ts' #>  #> Data: #> List of 2 #>  $ bins   :List of 6 #>  $ bindata:List of 3 #>  - attr(*, \"class\")= chr \"data2ts\" #> NULL #>  #> Range covered by the bins:  #> $bins_u #> [1]    8 2288 #>  #> $bins_s #> [1]    0 2730 #>  #>  #> Number of bins:  #> $nu #> [1] 76 #>  #> $ns #> [1] 91 #>  #>  #> Overview of the binned data: #> [1] \"Total exposure time: 246018\" #>  #> [1] \"Total number of events: 409\" #>  #> Covariates: #> [1] \"Lev\"      \"Lev_5FU\"  \"male\"     \"adhere\"   \"obstruct\" \"node4\" mod_cov <- fit2ts(data2ts = dt2ts_cov,                   Bbases_spec = list(bdeg = 3,                                      nseg_s = 20,                                      min_s = 0,                                      max_s = 2730,                                      nseg_u = 20,                                      min_u = 0,                                      max_u = 2300),                   pord = 2,                   optim_method = \"ucminf\",                   optim_criterion = \"aic\")"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/twotimes.html","id":"prepare-the-data-over-the-lexis-diagram","dir":"Articles","previous_headings":"PH regression for the colon cancer data","what":"Prepare the data over the Lexis diagram","title":"Smooth hazards with two time scales","text":", principle, possible prepare data (t,s)(t,s)-plane. , pass arguments function prepare_data() vector entry times vector exit times tt axis, rather vector entry times uu. image plot exposure times, can see data present lower half-plane t≥st\\ge s.  Note: estimation (t,s)(t,s)-plane model theoretically possible, special care needed deal larger areas without data support (especially t<st < s). Comparison estimation (u,s)(u,s)-plane currently investigation. future version package include options estimation (t,s)(t,s)-plane.","code":"dt2tsLex <- prepare_data(t_in = reccolon2ts$timer,                          t_out = reccolon2ts$timedc,                          s_out = reccolon2ts$timesr,                          events = reccolon2ts$status,                          ds = 30, dt = 30) #> `s_in = NULL`. I will use `s_in = 0` for all observations. #> `s_in = NULL`. I will use `s_in = 0` for all observations. #> NOTE: entry.status has been set to 0 for all. fields::image.plot(dt2tsLex$bins$midt,                     dt2tsLex$bins$mids,                    dt2tsLex$bindata$R,                    main = \"Exposure\",                    xlab = \"time since randomization\",                    ylab = \"time since recurrence\",                    col = c(\"white\", rev(viridis::plasma(20)))) abline(a=0,b=1) box()"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/visualization.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Visualize hazards with two time scales","text":"topic vignette visualization hazard one event two time scales. show complete set options function plot_haz2ts(). assume reader already knows estimate smooth hazard model two time scales. Therefore, discuss plotting function. illustration, use PH model vignette Smooth hazards two time scales.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/articles/visualization.html","id":"the-function-plot","dir":"Articles","previous_headings":"","what":"The function plot()","title":"Visualize hazards with two time scales","text":"method plot(), class \"haz2ts\" offers different possibilities plot results model two time scales. user can choose plotting hazard surface which_plot == \"hazard\", plotting standard error surface which_plot == \"SE\", plotting cross-sections (also called “slices”) surface specific values one two time dimensions which_plot == \"slices\", finally, model covariates’ effects, possible plot estimated β\\beta coefficients confidence intervals (hazard ratios scale) which_plot == \"covariates\". now examine options use.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/articles/visualization.html","id":"baseline-hazard-and-log-hazard","dir":"Articles","previous_headings":"The function plot()","what":"Baseline hazard and log-hazard","title":"Visualize hazards with two time scales","text":"default plot hazard surface (u,s)(u,s)-plane, contour lines white mark levels hazard. obtained passing fitted object, obtained fit2ts() (hence class \"haz2ts\") function plot().","code":"plot(mod_cov)"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/visualization.html","id":"plot-on-the-ts-plane","dir":"Articles","previous_headings":"The function plot() > Baseline hazard and log-hazard","what":"Plot on the (t,s)(t,s)-plane","title":"Visualize hazards with two time scales","text":"plot can obtained (t,s)(t,s)-plan using rectangular grid grid parallelograms (case possible plot contour lines). done modifying arguments original rectangular_grid list options plotting parameters plot_options. Additionally, customize title plots label axes.","code":"par(mfrow = c(2,1),      font.main = 1) plot(mod_cov,      plot_options = list(        rectangular_grid = T,               # for grid of rectangles        original = T,                       # for plot in (t,s)-plane        main = \"Original plane - rectangular grid\",        xlab = \"Time since randomization\",        ylab = \"Time since recurrence\"      )) plot(mod_cov,      plot_options = list(        rectangular_grid = F,                # for grid of parallelograms        original = T,                        # for plot in (t,s)-plane        main = \"Original plane - grid of parallelograms\",        xlab = \"Time since randomization\",        ylab = \"Time since recurrence\"      )) par(mfrow = c(1,1))"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/visualization.html","id":"evaluate-the-b-splines-on-a-finer-grid","dir":"Articles","previous_headings":"The function plot() > Baseline hazard and log-hazard","what":"Evaluate the BB-splines on a finer grid","title":"Visualize hazards with two time scales","text":"default options, BB-splines bases used estimation also used compute values hazard. grid bins used binning data, evaluate estimating BB-splines bases, already dense (many small bins), plot estimated hazard appear nicely smooth. However, cases, larger bins used original binning data estimation model. cases may worthwhile evaluate BB-splines bases finer grid points. hazard surface appear much smoother interpolated points. possible change grid plotting passing specification new grid argument plot_grid. show passing specification grid bins 5 days apart (opposed 30). case good idea increase number shades color legend .","code":"plot(mod_cov,      plot_grid = list(c(umin=0, umax=2300, du=5),                       c(umin=0, umax=2730, du=5)),      plot_options = list(n_shades = 100,                          main = \"Denser plotting grid\",                          xlab = \"Time at recurrence\",                          ylab = \"Time since recurrence\"))"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/visualization.html","id":"plot-the-log-hazard","dir":"Articles","previous_headings":"The function plot() > Baseline hazard and log-hazard","what":"Plot the log-hazard","title":"Visualize hazards with two time scales","text":"can plot hazard log-scale changing argument loghazard = T plot_options:","code":"par(mfrow = c(2,1),      font.main = 1) plot(mod_cov,      plot_options = list(        loghazard = T,        main = \"Log-hazard (u,s)\",        xlab = \"Time at recurrence\",        ylab = \"Time since recurrence\"      )) plot(mod_cov,      plot_options = list(        original = T,        loghazard = T,        main = \"Log-hazard (t,s)\",        xlab = \"Time since randomization\",        ylab = \"Time since recurrence\"      )) par(mfrow = c(1,1))"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/visualization.html","id":"plot-the-log10-hazard","dir":"Articles","previous_headings":"The function plot() > Baseline hazard and log-hazard","what":"Plot the log10-hazard","title":"Visualize hazards with two time scales","text":"Similarly, can plot hazard log10-scale changing argument log10hazard = T plot_options:","code":"par(mfrow = c(2,1),      font.main = 1) plot(mod_cov,      plot_options = list(        log10hazard = T,        main = \"Log10-hazard (u,s)\",        xlab = \"Time at recurrence\",        ylab = \"Time since recurrence\"      )) plot(mod_cov,      plot_options = list(        original = T,        log10hazard = T,        main = \"Log10-hazard (t,s)\",        xlab = \"Time since randomization\",        ylab = \"Time since recurrence\"      )) par(mfrow = c(1,1))"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/visualization.html","id":"cut-extrapolated-hazard","dir":"Articles","previous_headings":"The function plot() > Baseline hazard and log-hazard","what":"Cut extrapolated hazard","title":"Visualize hazards with two time scales","text":"Carollo et al. (2023) discusses issue extrapolated hazard beyond maximum value observed time scale tt. can limit plot hazard areas extrapolated. changing values cut_extrapolated = T tmax plot_options.","code":"par(mfrow = c(2,1),      font.main = 1) plot(mod_cov,      plot_options = list(cut_extrapolated = T,                          tmax = 3214,                          main = \"Cut extrapolated hazard\",                          xlab = \"Time at recurrence\",                          ylab = \"Time since recurrence\"))  plot(mod_cov,      plot_options = list(cut_extrapolated = T,                          tmax = 3214,                          original = T,                          main = \"Cut extrapolated hazard\",                          xlab = \"Time since randomization\",                          ylab = \"Time since recurrence\"))"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/visualization.html","id":"change-color-palette-and-color-of-the-contour-lines","dir":"Articles","previous_headings":"The function plot() > Baseline hazard and log-hazard","what":"Change color palette and color of the contour lines","title":"Visualize hazards with two time scales","text":"Let us try new color palette modify options concerning contour lines. palette function number shades, need code one extra line…","code":"mycol <- function(nshades){   colorspace::sequential_hcl(n=nshades, \"Blues 3\") } plot(mod_cov,      plot_options = list(col_palette = mycol,                          main = \"New colors\",                          xlab = \"Time at recurrence\",                          ylab = \"Time since recurrence\",                          contour_col = \"pink\",                          contour_nlev = 20))"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/visualization.html","id":"standard-errors-surface","dir":"Articles","previous_headings":"The function plot()","what":"Standard Errors surface","title":"Visualize hazards with two time scales","text":"options apply SE surface, just show produce simplest version SE surface plot.","code":"plot(mod_cov,      which_plot = \"SE\",      plot_options = list(main = \"Standard Errors of the hazard\",                          xlab = \"Time at recurrence\",                          ylab = \"Time since recurrence\")) plot(mod_cov,      which_plot = \"SE\",      plot_options = list(        loghazard = TRUE,        main = \"Standard Errors of the log-hazard\",        xlab = \"Time at recurrence\",        ylab = \"Time since recurrence\")) plot(mod_cov,      which_plot = \"SE\",      plot_options = list(        log10hazard = TRUE,        main = \"Standard Errors of the log10-hazard\",        xlab = \"Time at recurrence\",        ylab = \"Time since recurrence\"))"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/visualization.html","id":"cross-sections-of-the-hazard","dir":"Articles","previous_headings":"The function plot()","what":"Cross-sections of the hazard","title":"Visualize hazards with two time scales","text":"Another informative representation 2d hazard consists plotting ‘slices’ two-dimensional hazard curves one time scales. example, 2d hazard surface plotted series one-dimensional hazard curves time since recurrence ss selected values time recurrence uu. Note: Adding automated legend kind plot still implemented package (come), can add one manually.  also possible plot one-dimensional hazards time since randomization (tt) selected values time since recurrence (ss). interpretation one-dimensional hazards less clear individual level, meaningful population level. obtain plot, specify direction = \"s\".","code":"plot(mod_cov,      which_plot = \"slices\",      where_slices = c(30, 60, 90, 180, 365, 1000, 2000),      direction = \"u\",      plot_options = list(main = \"Slices of the hazard\",                          xlab = \"Time since recurrence\",                          ylab = \"Hazard\")) legend(\"topright\",        legend = c(30, 60, 90, 180, 365, 1000, 2000),         lty = 1,         col = grDevices::gray.colors(7)) plot(mod_cov,      which_plot = \"slices\",      where_slices = c(30, 60, 90, 180, 365, 1000, 2000),      direction = \"s\",      plot_options = list(main = \"Slices of the hazard\",                          xlab = \"Time since randomization\",                          ylab = \"Hazard\")) legend(\"topright\",        legend = c(30, 60, 90, 180, 365, 1000, 2000),         lty=1,         col= grDevices::gray.colors(7))"},{"path":"https://angelacar.github.io/TwoTimeScales/articles/visualization.html","id":"covariates-plot","dir":"Articles","previous_headings":"The function plot()","what":"Covariates plot","title":"Visualize hazards with two time scales","text":"Finally, show plot covariates’ effects. discussed kind plot details vignette Smooth hazard one time scale, show default plot.","code":"plot(mod_cov,      which_plot = \"covariates\",      plot_options = list(main = \"\",                          ylab = \"betas\"))"},{"path":"https://angelacar.github.io/TwoTimeScales/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Angela Carollo. Author, maintainer. Paul H.C. Eilers. Author. Jutta Gampe. Author.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carollo , Eilers P, Gampe J (2024). TwoTimeScales: Analysis event data two time scales. R package version 0.3.1, https://angelacar.github.io/TwoTimeScales/, https://github.com/AngelaCar/TwoTimeScales.","code":"@Manual{,   title = {TwoTimeScales: Analysis of event data with two time scales},   author = {Angela Carollo and Paul H.C. Eilers and Jutta Gampe},   year = {2024},   note = {R package version 0.3.1, https://angelacar.github.io/TwoTimeScales/},   url = {https://github.com/AngelaCar/TwoTimeScales}, }"},{"path":"https://angelacar.github.io/TwoTimeScales/index.html","id":"twotimescales","dir":"","previous_headings":"","what":"Analysis of event data with two time scales","title":"Analysis of event data with two time scales","text":"TwoTimeScales provides suite functions analysis time event data two time scales. package provides tools estimate smooth hazard varies two time scales also, covariates available, estimate proportional hazards model two-dimensional baseline hazard. hazard one event modelled means two-dimensional P-splines model Poisson data offset. Regression model study effect covariates baseline hazard possible proportional hazards fashion. Functions plot (baseline) hazard also provided. Additionally, functions estimate cumulated surfaces (cumulated hazard, survival function incidence function) two time scales included.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analysis of event data with two time scales","text":"can install development version TwoTimeScales GitHub : Vignettes need explicitly requested. install version package including vignettes, please run: Note: take time installing version package without vignettes. Alternatively, suggest read vignettes online : TwoTimeScales","code":"# install.packages(\"devtools\") devtools::install_github(\"AngelaCar/TwoTimeScales\") devtools::install_github(\"AngelaCar/TwoTimeScales\",                           dependencies = TRUE, build_vignettes = TRUE)"},{"path":"https://angelacar.github.io/TwoTimeScales/index.html","id":"how-to-use-twotimescales","dir":"","previous_headings":"","what":"How to use TwoTimeScales","title":"Analysis of event data with two time scales","text":"general introduction usage package given : Introduction. examples can found vignettes.","code":"vignette(\"TwoTimeScales\") vignette(\"onetime\") vignette(\"twotimes\") vignette(\"visualization\")"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/GLAM_1d_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the 1d GLAM with covariates — GLAM_1d_covariates","title":"Fit the 1d GLAM with covariates — GLAM_1d_covariates","text":"GLAM_1d_covariates() fits GLAM hazard one time scale, covariates.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/GLAM_1d_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the 1d GLAM with covariates — GLAM_1d_covariates","text":"","code":"GLAM_1d_covariates(   R,   Y,   Bs,   Z = Z,   Wprior = NULL,   P,   control_algorithm = list(maxiter = 20, conv_crit = 1e-05, verbose = FALSE) )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/GLAM_1d_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the 1d GLAM with covariates — GLAM_1d_covariates","text":"R 2d-array dimensions ns n containing exposure times. Y 2d-array dimensions ns n containing events' indicators. Bs matrix B-splines s time scale dimension ns cs. Z regression matrix covariates values dimensions n p. Wprior optional vector length ns -priori weights. P penalty matrix dimension cs cs. control_algorithm list optional values parameters iterative processes: *maxiter maximum number iterations IWSL algorithm, default 20 . * conv_crit convergence criteria, expressed difference estimates iteration +1, default 1e-5. * verbose Boolean. Default FALSE. TRUE, monitor iteration process.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/GLAM_1d_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the 1d GLAM with covariates — GLAM_1d_covariates","text":"list following elements: alpha vector estimated P-splines coefficients length cs. SE_alpha vector estimated Standard Errors alpha coefficients, length cs. beta vector length p estimated covariates coefficients. se_beta vector length p estimated Standard Errors beta coefficients. eta0 vector values baseline linear predictor (log-hazard). H hat-matrix. Cov full variance-covariance matrix. deviance deviance. ed effective dimension model. aic value AIC. bic value BIC. Bbases list B-spline basis Bs (list compatibility functions 2d).","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/GLAM_2d_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the 2d GLAM with covariates — GLAM_2d_covariates","title":"Fit the 2d GLAM with covariates — GLAM_2d_covariates","text":"GLAM_2d_covariates() fits GLAM hazard two time scales, covariates.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/GLAM_2d_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the 2d GLAM with covariates — GLAM_2d_covariates","text":"","code":"GLAM_2d_covariates(   R,   Y,   Bu,   Bs,   Z,   Wprior = NULL,   P,   ridge = 0,   control_algorithm = list(maxiter = 20, conv_crit = 1e-05, verbose = FALSE) )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/GLAM_2d_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the 2d GLAM with covariates — GLAM_2d_covariates","text":"R 3d-array dimensions nu ns n containing exposure times. Y 3d-array dimensions nu ns n containing events' indicators. Bu matrix B-splines u time scale dimension nu cu. Bs matrix B-splines s time scale dimension ns cs. Z (optional) regression matrix covariates values dimensions n p. Wprior optional matrix -priori weights. P penalty matrix dimension cucs cucs. ridge ridge penalty parameter: default 0. control_algorithm list optional values parameters iterative processes: maxiter maximum number iteration IWSL algorithm. Default 20. conv_crit convergence criteria, expressed difference estimates iteration +1. Default 1e-5. verbose Boolean. Default FALSE. TRUE monitors iteration process.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/GLAM_2d_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the 2d GLAM with covariates — GLAM_2d_covariates","text":"list following elements: Alpha matrix estimated P-splines coefficients dimension cu cs. Cov_alpha variance-covariance matrix Alpha coefficients, dimension cucs cucs. beta vector length p estimated covariates coefficients. Cov_beta variance-covariance matrix beta coefficients, dimension p p. SE_beta vector length p estimated Standard Errors beta coefficients. Eta0 matrix values baseline linear predictor (log-hazard) dimension nu ns. H hat-matrix. deviance deviance. ed effective dimension model. aic value AIC. bic value BIC. Bbases list B-spline bases Bu Bs.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/GLAM_2d_no_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the 2d GLAM without covariates — GLAM_2d_no_covariates","title":"Fit the 2d GLAM without covariates — GLAM_2d_no_covariates","text":"GLAM_2d_no_covariates() fits GLAM hazard two time scales, without covariates.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/GLAM_2d_no_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the 2d GLAM without covariates — GLAM_2d_no_covariates","text":"","code":"GLAM_2d_no_covariates(   R,   Y,   Bu,   Bs,   Wprior = NULL,   P,   ridge = 0,   control_algorithm = list(maxiter = 20, conv_crit = 1e-05, verbose = FALSE) )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/GLAM_2d_no_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the 2d GLAM without covariates — GLAM_2d_no_covariates","text":"R matrix exposure times dimension nu ns. Y matrix event counts dimension nu ns. Bu matrix B-splines u time scale dimension nu cu. Bs matrix B-splines s time scale dimension ns cs. Wprior optional matrix -priori weights. P penalty matrix dimension cucs cucs. ridge ridge penalty parameter: default 0. control_algorithm list optional values parameters iterative processes: maxiter maximum number iteration IWSL algorithm. Default 20. conv_crit convergence criteria, expressed difference estimates iteration +1. Default 1e-5. verbose Boolean. Default FALSE. TRUE monitors iteration process.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/GLAM_2d_no_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the 2d GLAM without covariates — GLAM_2d_no_covariates","text":"list following elements: Alpha matrix estimated P-splines coefficients dimension cu cs. Cov_alpha variance-covariance matrix Alpha coefficients, dimension cucs cucs. Eta0 matrix values baseline linear predictor (log-hazard) dimension nu ns. H hat-matrix. deviance deviance. ed effective dimension model. aic value AIC. bic value BIC. Bbases list B-spline bases Bu Bs.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/covariates_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of the covariates' effects — covariates_plot","title":"Plot of the covariates' effects — covariates_plot","text":"covariates_plot() produces plot covariates' effects (\\(\\hat\\beta\\)) confidence intervals, Hazard Ratios (\\(\\exp(\\hat\\beta)\\)) confidence intervals.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/covariates_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of the covariates' effects — covariates_plot","text":"","code":"covariates_plot(   fitted_model,   confidence_lev = 0.95,   plot_options = list(),   ... )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/covariates_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of the covariates' effects — covariates_plot","text":"fitted_model list returned function fit2ts fit1ts. confidence_lev level confidence CIs. Default 0.95 (\\(\\alpha = 0.05\\)). plot_options list options plot: HR Boolean. TRUE HRs CIs plotted. Default FALSE (plot beta CIs). symmetric_ci Boolean. Default TRUE. plot HRs required (HR == TRUE), plot symmetrical Confidence Intervals, based SEs HRs calculated delta method. FALSE, CIs obtained exponentiating CIs betas. main title plot. ylab label y-axis. ylim vector two elements defining limits y-axis. col_beta color plot covariates' effects. pch symbol plotting point estimates. cex_main magnification factor main plot. ... arguments passed plot()","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/covariates_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of the covariates' effects — covariates_plot","text":"plot covariates' effects. different covariates plotted x-axis, y-axis effects coefficient- HR-scale plotted. main estimate represented point CIs added vertical bars.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/cumhaz2ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulated hazard over two time scales — cumhaz2ts","title":"Cumulated hazard over two time scales — cumhaz2ts","text":"Computes cumulated hazard surface two time scales (currently implemented objects class haz2ts, haz2tsLMM).","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/cumhaz2ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulated hazard over two time scales — cumhaz2ts","text":"","code":"cumhaz2ts(fitted_model, plot_grid = NULL, cause = NULL)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/cumhaz2ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulated hazard over two time scales — cumhaz2ts","text":"fitted_model output function fit2ts. object class 'haz2ts'. plot_grid (optional) list containing parameters build new finer grid intervals u s plotting. must form: plot_grid = list(c(umin, umax, du), c(smin, smax, ds)) umin, umax smin, smax minimum maximum values desired intervals u s respectively, du, ds distances intervals u s respectively. Specifying new denser grid used evaluate B-spline bases used estimation grid plot estimated surfaces greater level details. specified, plotting done using B-splines bases estimation. function check parameters grid provided user compatible originally used construct B-splines estimating model. , grid adjusted accordingly warning returned. cause character string short name cause (optional).","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/cumhaz2ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulated hazard over two time scales — cumhaz2ts","text":"list following elements: * Haz 2d hazard surface (obtained function get_hazard_2d); * CumHaz cumulated hazard estimate u s; * cause (provided) short name cause","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/cuminc2ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative incidence surface over two time scales — cuminc2ts","title":"Cumulative incidence surface over two time scales — cuminc2ts","text":"Cumulative incidence surface two time scales","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/cuminc2ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative incidence surface over two time scales — cuminc2ts","text":"","code":"cuminc2ts(haz = list(), oversurv, ds, cause = NULL)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/cuminc2ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative incidence surface over two time scales — cuminc2ts","text":"haz list cause-specific hazards oversurv overall survival probability surface two time scales, obtained surv2ts (last element list results) ds distance two consecutive intervals s time scale. equal cause-specific hazards cause optional vector short names causes. length number cause-specific cumulated hazards provided.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/cuminc2ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative incidence surface over two time scales — cuminc2ts","text":"list one cumulative incidence matrix cause-specific hazard (named vector short names passed cause).","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin data on one time scale — exposures_events_1d","title":"Bin data on one time scale — exposures_events_1d","text":"exposure_events_1d() computes aggregated measures exposure times event counts starting individual records time entry, time exit event's indicator, one time scale (s).","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin data on one time scale — exposures_events_1d","text":"","code":"exposures_events_1d(s_in = NULL, s_out, ev, bins)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin data on one time scale — exposures_events_1d","text":"s_in vector (possibly left truncated) times entry. provided user, function consider value 0 observations. s_out vector times event censoring. ev vector events' indicators (possible values 0/1). bins vector interval breaks discretization (see also make_bins()).","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bin data on one time scale — exposures_events_1d","text":"list following elements: R  matrix dimension \\(n\\) \\(ns\\) containing exposure times individual separately. r  vector exposure times. Y  matrix dimension \\(n\\) \\(ns\\) containing event counts individual separately y  vector event counts. length input vectors match, error message returned.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_1d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bin data on one time scale — exposures_events_1d","text":"time scale s divided bins equal size, provided input function. , time--risk individual split according bins, event indicator placed bin exit time located. Finally, individual contributions summed bin provide vector total exposure time total event counts. See also prepare_data() conveniently prepare individual data analysis one, two time scales.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_1d.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bin data on one time scale — exposures_events_1d","text":"Angela Carollo carollo@demogr.mpg.de Paul Eilers p.eilers@erasmus.nl","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_1d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bin data on one time scale — exposures_events_1d","text":"","code":"# ---- Bin colon cancer data by time since recurrence ---- # First create vector of bins bins1ts <- make_bins(s_in = reccolon2ts$entrys, s_out = reccolon2ts$timesr, ds = 30) bindata <- exposures_events_1d(s_in = reccolon2ts$entrys, s_out = reccolon2ts$timesr, ev = reccolon2ts$status, bins = bins1ts$bins_s)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin data on two time scales — exposures_events_2d","title":"Bin data on two time scales — exposures_events_2d","text":"exposures_events_2d() computes individual aggregated matrices exposure times event counts starting individual records time entry process (measured first time scale), duration entry process (measured second time scale), duration exit process (measured second time scale), event's indicator.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin data on two time scales — exposures_events_2d","text":"","code":"exposures_events_2d(u, s_in = NULL, s_out, ev, bins_list, individual = FALSE)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin data on two time scales — exposures_events_2d","text":"u vector fixed times entry process, measured first time scale. s_in vector (possibly left truncated) times entry. provided user, function consider value 0 observations. s_out vector times event censoring. ev vector events' indicators (possible values 0/1). bins_list list following (necessary) elements (usually prepared make_bins()): bins_u vector extreme values bins u axis bins_s vector extreme values bins s axis individual Boolean. Default FALSE: FALSE computes matrices R Y collectively observations; TRUE computes matrices R Y separately individual record.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bin data on two time scales — exposures_events_2d","text":"list following elements: R array exposure times: individual == TRUE, R array dimension \\(nu\\) \\(ns\\) \\(n\\), otherwise array dimension \\(nu\\) \\(ns\\) Yan array event counts: individual == TRUE, Y array dimension \\(nu\\) \\(ns\\) \\(n\\), otherwise array dimension \\(nu\\) \\(ns\\)","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_2d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bin data on two time scales — exposures_events_2d","text":"fixed-time variable u second time scale s divided \\(nu\\) \\(ns\\) intervals, respectively. extremes intervals provided input function. First, fixed-time entry located one nu bins cover whole range u. , time--risk individual split according ns bins span whole range values s, event indicator placed bin exit time located. done calling function exposure_events_1d. individual matrices exposure events required, function returns two arrays dimension \\(nu\\) \\(ns\\) \\(n\\). aggregated results preferred, individual contributions summed bin provide matrix total exposure time matrix total event counts, dimensions \\(nu\\) \\(ns\\). See also prepare_data() conveniently prepare individual data analysis one, two time scales.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_2d.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bin data on two time scales — exposures_events_2d","text":"Angela Carollo carollo@demogr.mpg.de","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bin data on two time scales — exposures_events_2d","text":"","code":"# ---- Bin colon cancer data by time at randomization and time since recurrence ---- # First create vectors of bins (using function `make_bins()`) bins <- make_bins(u = reccolon2ts$timer, s_out = reccolon2ts$timesr, du = 30, ds = 30) #> `s_in = NULL`. I will use `s_in = 0` for all observations. # Now bin data (note: the s_in argument is omitted because data are not left truncated) bindata2d <- exposures_events_2d(u = reccolon2ts$timer, s_out = reccolon2ts$timesr, ev = reccolon2ts$status, bins = bins) #> `s_in = NULL`. I will use `s_in = 0` for all observations."},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_Lexis.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin data on the Lexis diagram — exposures_events_Lexis","title":"Bin data on the Lexis diagram — exposures_events_Lexis","text":"exposures_events_Lexis() computes aggregated matrices exposure times event counts two time scales, Lexis diagram. time scales t s. function uses functions package popEpi package Epi, code shared Bendix Carstensen website bendixcarstensen.com. See also prepare_data() conveniently prepare individual data analysis one, two time scales.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_Lexis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin data on the Lexis diagram — exposures_events_Lexis","text":"","code":"exposures_events_Lexis(t_in = NULL, t_out, s_in = NULL, s_out, ev, bins_list)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_Lexis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin data on the Lexis diagram — exposures_events_Lexis","text":"t_in (optional) vector entry times time scale t. t_out (optional) vector exit times time scale t. s_in (optional) vector entry times time scale s. s_out vector exit times time scale s. ev vector event's indicators (possible values 0/1). bins_list list following (necessary) elements: bins_t vector extreme values bins t axis. nt number bins t. bins_s vector extreme values bins t axis. ns number bins s.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_Lexis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bin data on the Lexis diagram — exposures_events_Lexis","text":"list following elements: R array exposure times dimension \\(nt\\) \\(ns\\) Y array event counts dimension \\(nt\\) \\(ns\\)","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_Lexis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bin data on the Lexis diagram — exposures_events_Lexis","text":"Carstensen B, Plummer M, Laara E, Hills M (2022). Epi: Package Statistical Analysis Epidemiology. R package version 2.47.1, https://CRAN.R-project.org/package=Epi. Miettinen J, Rantanen M, Seppa K (2023). popEpi: Functions Epidemiological Analysis using Population Data. R package version 0.4.11, https://cran.r-project.org/package=popEpi.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/exposures_events_Lexis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bin data on the Lexis diagram — exposures_events_Lexis","text":"Angela Carollo carollo@demogr.mpg.de","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit1ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a smooth hazard model with one time scale — fit1ts","title":"Fit a smooth hazard model with one time scale — fit1ts","text":"fit1ts() fits smooth hazard model one time scale. Three methods implemented search optimal smoothing parameter (therefore optimal model): numerical optimization AIC BIC model, search minimum AIC BIC model grid \\(\\log_{10}\\) values smoothing parameter estimation mixed model representation P-splines. Construction B-splines basis penalty matrix incorporated within function. matrix covariates provided, function estimate model covariates.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit1ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a smooth hazard model with one time scale — fit1ts","text":"","code":"fit1ts(   data1ts = NULL,   y = NULL,   r = NULL,   Z = NULL,   bins = NULL,   Bbases_spec = list(),   Wprior = NULL,   pord = 2,   optim_method = c(\"ucminf\", \"grid_search\", \"LMMsolver\"),   optim_criterion = c(\"aic\", \"bic\"),   lrho = 0,   ridge = 0,   control_algorithm = list(),   par_gridsearch = list() )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit1ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a smooth hazard model with one time scale — fit1ts","text":"data1ts (optional) object created function prepare_data(). Providing input easiest way use function fit1ts. However, user can also provide input data together list bins, explained following parameters' descriptions. y vector event counts length ns, array dimension ns n. r vector exposure times length ns, array dimension ns n. Z (optional) regression matrix covariates dimension n p. bins list specification bins. created function prepare_data. Alternatively, list following elements can provided: * bins_s vector bins extremes time scale s. * mids vector midpoints bins s. * ns number bins s. Bbases_spec list specification B-splines basis following elements: bdeg degree B-splines basis. Default 3 (cubic B-splines). nseg_s number segments B-splines s. Default 10. min_s (optional) lower limit domain Bs. Default min(bins_s). max_s (optional) upper limit domain Bs. Default max(bins_s). Wprior optional vector -priori weights. pord order penalty. Default 2. optim_method method used optimization: \"ucminf\" (default) numerical optimization AIC (BIC), \"grid_search\" grid search minimum AIC (BIC) grid \\(\\log_{10}(\\varrho_s)\\) values, \"LMMsolver\" solve model sparse linear mixed model using package LMMsolver. optim_criterion criterion used optimization: \"aic\" (default) \"bic\". lrho number optim_method == \"ucminf\", default 0. vector values \\(\\log_{10}(\\varrho_s)\\)  optim_method == \"grid_search\". latter case, vector provided, default sequence values used \\(\\log_{10}(\\varrho_s)\\) . ridge ridge penalty parameter: default 0. control_algorithm list optional values parameters iterative processes: maxiter maximum number iteration IWSL algorithm. Default 20. conv_crit convergence criteria, expressed difference estimates iteration +1. Default 1e-5. verbose Boolean. Default FALSE. TRUE monitors iteration process. monitor_ev Boolean. Default FALSE. TRUE monitors evaluation model log_10(rho_s) values. par_gridsearch list parameters grid_search: plot_aic Boolean. Default FALSE. TRUE, plot AIC values grid log_10(rhos) values. plot_bic Boolean. Default FALSE. TRUE, plot BIC values grid log_10(rhos) values. return_aic Boolean. Default TRUE. Return AIC values. return_bic Boolean. Default TRUE. Return BIC values. mark_optimal Boolean. Default TRUE. plot AIC BIC values returned, marks optimal log_10(rho_s) plot. main_aic title AIC plot. Default \"AIC grid\". main_bic title BIC plot. Default \"BIC grid\".","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit1ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a smooth hazard model with one time scale — fit1ts","text":"object class haz1ts, class haz1tsLMM. objects class haz1ts optimal_model list : alpha vector estimated P-splines coefficients length cs. SE_alpha vector estimated Standard Errors alpha coefficients, length cs. beta vector estimated covariates coefficients length p (model covariates). se_beta vector estimated Standard Errors beta coefficients length p (model covariates). eta eta0. vector values (baseline) linear predictor (log-hazard). H hat-matrix. Cov full variance-covariance matrix. deviance deviance. ed effective dimension model. aic value AIC. bic value BIC. Bbases list B-spline basis Bs (list compatibility functions 2d). optimal_logrho optimal value log10(rho_s). P_optimal optimal penalty matrix P. AIC (par_gridsearch$return_aic == TRUE) vector AIC values. BIC (par_gridsearch$return_bic == TRUE) vector BIC values. Objects class haz1tsLMM slight different structure. list : optimal_model object class LMMsolve AIC_BIC list , among things, AIC BIC values ED model n_events number events ns number bins s-axis cs number B-splines s-axis covariates indicator PH model","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit1ts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a smooth hazard model with one time scale — fit1ts","text":"functions R-package LMMsolver used . refer interested readers https://biometris.github.io/LMMsolver/ details LMMsolver usage.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit1ts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a smooth hazard model with one time scale — fit1ts","text":"Boer, Martin P. 2023. “Tensor Product P-Splines Using Sparse Mixed Model Formulation.” Statistical Modelling 23 (5-6): 465–79. https://doi.org/10.1177/1471082X231178591.#'","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit1ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a smooth hazard model with one time scale — fit1ts","text":"","code":"if (FALSE) { # \\dontrun{ ## preparing data - no covariates dt1ts <- prepare_data(s_in = reccolon2ts$entrys,                         s_out = reccolon2ts$timesr,                         events = reccolon2ts$status,                         ds = 30)  ## fitting the model with fit1ts() - default options  mod1 <- fit1ts(dt1ts)  ## preparing the data - covariates  covs <- subset(reccolon2ts, select = c(\"rx\", \"node4\", \"sex\")) dt1ts_cov <- prepare_data(s_in = reccolon2ts$entrys,                           s_out = reccolon2ts$timesr,                           events = reccolon2ts$status,                           ds = 30,                           individual = TRUE,                           covs = covs)  ## fitting the model with fit1ts() - default options  mod2 <- fit1ts(d)  ## } # }"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit1tsmodel_ucminf.html","id":null,"dir":"Reference","previous_headings":"","what":"Numerical optimization of the 1ts model — fit1tsmodel_ucminf","title":"Numerical optimization of the 1ts model — fit1tsmodel_ucminf","text":"fit1tsmodel_ucminf() performs numerical optimization AIC BIC one time scale model. finds optimal values \\(\\log_{10}(\\varrho_s)\\) returns estimated optimal model. See also ucminf::ucminf().","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit1tsmodel_ucminf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numerical optimization of the 1ts model — fit1tsmodel_ucminf","text":"","code":"fit1tsmodel_ucminf(   r,   y,   Z = NULL,   lrho = 0,   Bs,   Ds,   Wprior = NULL,   optim_criterion = c(\"aic\", \"bic\"),   control_algorithm = list() )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit1tsmodel_ucminf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numerical optimization of the 1ts model — fit1tsmodel_ucminf","text":"r vector exposure times length ns, array dimension ns n. y vector event counts length ns, array dimension ns n. Z (optional) regression matrix covariates dimension n p. lrho starting value \\(\\log_{10}(\\varrho_s)\\). Default 0. Bs matrix B-splines time scale s. Ds difference matrix penalty. Wprior optional vector -priori weights. optim_criterion criterion used optimization: \"aic\" (default) \"bic\". control_algorithm list optional values parameters iterative processes: maxiter maximum number iteration IWSL algorithm. Default 20. conv_crit convergence criteria, expressed difference estimates iteration +1. Default 1e-5. verbose Boolean. Default FALSE. TRUE monitors iteration process. monitor_ev Boolean. Default FALSE. TRUE monitors evaluation model log_10(rho_s) values.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit1tsmodel_ucminf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Numerical optimization of the 1ts model — fit1tsmodel_ucminf","text":"object class haz1ts following elements: optimal_model list containing results optimal model. optimal_logrho optimal value log10(rho_s). P_optimal optimal penalty matrix P.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit1tsmodel_ucminf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Numerical optimization of the 1ts model — fit1tsmodel_ucminf","text":"Nielsen H, Mortensen S (2024). ucminf: General-Purpose Unconstrained Non-Linear Optimization. R package version 1.2.2, https://CRAN.R-project.org/package=ucminf","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit2ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a smooth hazard model with two time scales — fit2ts","title":"Fit a smooth hazard model with two time scales — fit2ts","text":"fit2ts() fits smooth hazard model two time scales. Two methods implemented search optimal smoothing parameters (therefore optimal model): numerical optimization AIC BIC model search minimum AIC BIC model grid log_10 values smoothing parameters. Construction B-splines bases penalty matrix incorporated within function. matrix covariates provided, function estimate model covariates.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit2ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a smooth hazard model with two time scales — fit2ts","text":"","code":"fit2ts(   data2ts = NULL,   Y = NULL,   R = NULL,   Z = NULL,   bins = NULL,   Bbases_spec = list(),   pord = 2,   optim_method = c(\"ucminf\", \"grid_search\", \"LMMsolver\"),   optim_criterion = c(\"aic\", \"bic\"),   lrho = c(0, 0),   Wprior = NULL,   ridge = 0,   control_algorithm = list(),   par_gridsearch = list() )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit2ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a smooth hazard model with two time scales — fit2ts","text":"data2ts (optional) object class created function prepare_data(). Proving input easiest way use function fit2ts. However, user can also provide input data together list bins, explained following parameters' descriptions. Y matrix (3d-array) event counts dimension nu ns (nu ns n). R matrix (3d-array) exposure times dimension nu ns (nu ns n). Z (optional) regression matrix covariates values dimensions n p. bins list specification bins. created function prepare_data. list prepared externally function provided, contain following elements: * bins_u vector bins extremes time scale u. * midu vector midpoints bins u. * nu number bins u. * bins_s vector bins extremes time scale s. * mids vector midpoints bins s. * ns number bins s. Bbases_spec list specification B-splines basis following elements: bdeg degree B-splines basis. Default 3 (cubic B-splines). nseg_u number segments B-splines u. Default 10. min_u (optional) lower limit domain Bu. Default min(bins_u). max_u (optional) upper limit domain Bu. Default max(bins_u). nseg_s number segments B-splines s. Default 10. min_s (optional) lower limit domain Bs. Default min(bins_s). max_s (optional) upper limit domain Bs. Default max(bins_s). pord order penalty. Default 2. optim_method method used optimization: \"ucminf\" (default) numerical optimization AIC (BIC), \"grid_search\" grid search minimum AIC (BIC) grid log_10(rho_u) log_10(rho_s) values, \"LMMsolver\" solve model sparse linear mixed model using package LMMsolver. optim_criterion criterion used optimization: \"aic\" (default) \"bic\". lrho vector two elements optim_method == \"ucminf\". Default c(0,0). list two vectors values log_10(rho_u) log_10(rho_s) optim_method == \"grid_search\". latter case, list two vectors provided, default sequence values used log_10(rho_u) log_10(rho_s). Wprior optional matrix -priori weights. ridge ridge penalty parameter: default 0. control_algorithm list optional values parameters iterative processes: maxiter maximum number iteration IWSL algorithm. Default 20. conv_crit convergence criteria, expressed difference estimates iteration +1. Default 1e-5. verbose Boolean. Default FALSE. TRUE monitors iteration process. monitor_ev Boolean. Default FALSE. TRUE monitors evaluation model log_10(rho_s) values. par_gridsearch list parameters grid_search: plot_aic Boolean. Default FALSE. TRUE, plot AIC values grid log_10(rho_u) log_10(rho_s) values. plot_bic Boolean. Default FALSE. TRUE, plot BIC values grid log_10(rho_u) log_10(rho_s) values. return_aic Boolean. Default TRUE. Return AIC values. return_bic Boolean. Default TRUE. Return BIC values. col color palette used AIC/BIC plot. Default grDevices::gray.colors(n=10). plot_contour Boolean. Default TRUE. Adds white contour lines AIC/BIC plot. mark_optimal Boolean. Default TRUE. plot AIC BIC values returned, marks optimal combination log_10(rho_u) log_10(rho_s) plot. main_aic title AIC plot. Default \"AIC grid\". main_bic title BIC plot. Default \"BIC grid\".","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit2ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a smooth hazard model with two time scales — fit2ts","text":"object class haz2ts, class haz2tsLMM. objects class haz2ts optimal_model list : Alpha matrix estimated P-splines coefficients dimension cu cs. Cov_alpha variance-covariance matrix Alpha coefficients, dimension cucs cucs. beta vector length p estimated covariates coefficients (model covariates). Cov_beta variance-covariance matrix beta coefficients, dimension p p (model covariates). SE_beta vector length p estimated Standard Errors beta coefficients (model covariates).. Eta Eta0 matrix values (baseline) linear predictor (log-hazard) dimension nu ns. H hat-matrix. deviance deviance. ed effective dimension model. aic value AIC. bic value BIC. Bbases list B-spline bases Bu Bs optimal_logrho vector optimal values log10(rho_u) log10(rho_s). P_optimal optimal penalty matrix P. AIC (par_gridsearch$return_aic == TRUE) matrix AIC values. BIC (par_gridsearch$return_bic == TRUE) matrix BIC values. Objects class haz2tsLMM slight different structure. list : optimal_model object class LMMsolve AIC_BIC list , among things, AIC BIC values ED model n_events number events nu number bins u-axis ns number bins s-axis cu number B-splines u-axis cs number B-splines s-axis covariates indicator PH model","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit2ts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a smooth hazard model with two time scales — fit2ts","text":"functions R-package LMMsolver used . refer interested readers https://biometris.github.io/LMMsolver/ details LMMsolver usage.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit2ts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a smooth hazard model with two time scales — fit2ts","text":"Boer, Martin P. 2023. “Tensor Product P-Splines Using Sparse Mixed Model Formulation.” Statistical Modelling 23 (5-6): 465–79. https://doi.org/10.1177/1471082X231178591. Carollo, Angela, Paul H. C. Eilers, Hein Putter, Jutta Gampe. 2023. “Smooth Hazards Multiple Time Scales.” arXiv Preprint: https://arxiv.org/abs/http://arxiv.org/abs/2305.09342v1","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit2tsmodel_ucminf.html","id":null,"dir":"Reference","previous_headings":"","what":"Numerical optimization of the 2ts model — fit2tsmodel_ucminf","title":"Numerical optimization of the 2ts model — fit2tsmodel_ucminf","text":"fit2tsmodel_ucminf() performs numerical optimization AIC BIC two time scales model. finds optimal values log_10(rho_u) log_10(rho_s) returns estimated optimal model. See also ucminf::ucminf().","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit2tsmodel_ucminf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numerical optimization of the 2ts model — fit2tsmodel_ucminf","text":"","code":"fit2tsmodel_ucminf(   Y,   R,   Z = NULL,   optim_criterion = c(\"aic\", \"bic\"),   lrho = c(0, 0),   Bu,   Bs,   Iu,   Is,   Du,   Ds,   Wprior = NULL,   ridge = 0,   control_algorithm = list() )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit2tsmodel_ucminf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numerical optimization of the 2ts model — fit2tsmodel_ucminf","text":"Y matrix (3d-array) event counts dimension nu ns (nu ns n). R matrix (3d-array) exposure times dimension nu ns (nu ns n). Z (optional) regression matrix covariates values dimensions n p. optim_criterion criterion used optimization: \"aic\" (default) \"bic\". lrho vector two elements, initial values \\(\\log_{10}(\\varrho_u)\\) \\(\\log_{10}(\\varrho_s)\\). Bu matrix B-splines u time scale dimension nu cu. Bs matrix B-splines s time scale dimension ns cs. Iu identity matrix dimension nbu nbu. identity matrix dimension nbs nbs. Du difference matrix u. Ds difference matrix s. Wprior optional matrix -priori weights. ridge ridge penalty parameter: default 0. control_algorithm list optional values parameters iterative processes: maxiter maximum number iteration IWSL algorithm. Default 20. conv_crit convergence criteria, expressed difference estimates iteration +1. Default 1e-5. verbose Boolean. Default FALSE. TRUE monitors iteration process. monitor_ev Boolean. Default FALSE. TRUE monitors evaluation model log_10(rho_s) values.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit2tsmodel_ucminf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Numerical optimization of the 2ts model — fit2tsmodel_ucminf","text":"object class haz2ts following elements: optimal_model list containing results optimal model. optimal_logrho vector optimal values log10(rho_u) log10(rho_s). P_optimal optimal penalty matrix P.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/fit2tsmodel_ucminf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Numerical optimization of the 2ts model — fit2tsmodel_ucminf","text":"Nielsen H, Mortensen S (2024). ucminf: General-Purpose Unconstrained Non-Linear Optimization. R package version 1.2.2, https://CRAN.R-project.org/package=ucminf","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/getAIC_BIC_LMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates AIC and BIC from object fitted via LMMsolver — getAIC_BIC_LMM","title":"Calculates AIC and BIC from object fitted via LMMsolver — getAIC_BIC_LMM","text":"getAIC_BIC_LMM utility function takes object class 'LMMsolve' fitted via fit1ts() fit2ts() calculates AIC, BIC ED.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/getAIC_BIC_LMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates AIC and BIC from object fitted via LMMsolver — getAIC_BIC_LMM","text":"","code":"getAIC_BIC_LMM(fit, offset)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/getAIC_BIC_LMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates AIC and BIC from object fitted via LMMsolver — getAIC_BIC_LMM","text":"fit object class \"LMMsolve\" offset vector exposure times dataLMM","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/getAIC_BIC_LMM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates AIC and BIC from object fitted via LMMsolver — getAIC_BIC_LMM","text":"list : * ED effective dimension full model; * EDbase effective dimension baseline hazard ; * Dev deviance; * AIC aic; * BIC bic; * n_beta number estimated covariate's parameters (PH model)","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_aic_fit_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the AIC of 1ts model — get_aic_fit_1d","title":"Return the AIC of 1ts model — get_aic_fit_1d","text":"get_aic_fit_1d() fits 1ts model without individual level covariates returns AIC model. See also fit1tsmodel_ucminf() fit1ts().","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_aic_fit_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the AIC of 1ts model — get_aic_fit_1d","text":"","code":"get_aic_fit_1d(   lrho,   r,   y,   Z = NULL,   Bs,   Ds,   Wprior = NULL,   control_algorithm = list(maxiter = 20, conv_crit = 1e-05, verbose = FALSE, monitor_ev =     FALSE) )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_aic_fit_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the AIC of 1ts model — get_aic_fit_1d","text":"lrho starting value \\(\\log_{10}(\\varrho_s)\\). Default 0. r vector exposure times length ns, array dimension ns n. y vector event counts length ns, array dimension ns n. Z (optional) regression matrix covariates dimension n p. Bs matrix B-splines time scale s. Ds difference matrix penalty. Wprior optional vector -priori weights. control_algorithm list optional values parameters iterative processes: maxiter maximum number iteration IWSL algorithm. Default 20. conv_crit convergence criteria, expressed difference estimates iteration +1. Default 1e-5. verbose Boolean. Default FALSE. TRUE monitors iteration process. monitor_ev Boolean. Default FALSE. TRUE monitors evaluation model log_10(rho_s) values.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_aic_fit_1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the AIC of 1ts model — get_aic_fit_1d","text":"aic value fitted model.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_aic_fit_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the AIC of 2ts model — get_aic_fit_2d","title":"Return the AIC of 2ts model — get_aic_fit_2d","text":"get_aic_fit_2d() fits 2ts model without individual level covariates returns AIC model. See also fit2tsmodel_ucminf() fit2ts().","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_aic_fit_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the AIC of 2ts model — get_aic_fit_2d","text":"","code":"get_aic_fit_2d(   lrho,   R,   Y,   Z = NULL,   Bu,   Bs,   Iu,   Is,   Du,   Ds,   Wprior = NULL,   ridge = 0,   control_algorithm = list(maxiter = 20, conv_crit = 1e-05, verbose = FALSE, monitor_ev =     FALSE) )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_aic_fit_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the AIC of 2ts model — get_aic_fit_2d","text":"lrho vector two elements, initial values \\(\\log_{10}(\\varrho_u)\\) \\(\\log_{10}(\\varrho_s)\\). R matrix (3d-array) exposure times dimension nu ns (nu ns n). Y matrix (3d-array) event counts dimension nu ns (nu ns n). Z (optional) regression matrix covariates values dimensions n p. Bu matrix B-splines u time scale dimension nu cu. Bs matrix B-splines s time scale dimension ns cs. Iu identity matrix dimension nbu nbu. identity matrix dimension nbs nbs. Du difference matrix u. Ds difference matrix s. Wprior optional matrix -priori weights. ridge ridge penalty parameter: default 0. control_algorithm list optional values parameters iterative processes: maxiter maximum number iteration IWSL algorithm. Default 20. conv_crit convergence criteria, expressed difference estimates iteration +1. Default 1e-5. verbose Boolean. Default FALSE. TRUE monitors iteration process. monitor_ev Boolean. Default FALSE. TRUE monitors evaluation model log_10(rho_s) values.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_aic_fit_2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the AIC of 2ts model — get_aic_fit_2d","text":"aic value fitted model.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_bic_fit_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the BIC of 1ts model — get_bic_fit_1d","title":"Return the BIC of 1ts model — get_bic_fit_1d","text":"get_bic_fit_1d() fits 1ts model without individual level covariates returns BIC model. See also fit1tsmodel_ucminf() fit1ts().","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_bic_fit_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the BIC of 1ts model — get_bic_fit_1d","text":"","code":"get_bic_fit_1d(   lrho,   r,   y,   Z = NULL,   Bs,   Ds,   Wprior = NULL,   control_algorithm = list(maxiter = 20, conv_crit = 1e-05, verbose = FALSE, monitor_ev =     FALSE) )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_bic_fit_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the BIC of 1ts model — get_bic_fit_1d","text":"lrho starting value \\(\\log_{10}(\\varrho_s)\\). Default 0. r vector exposure times length ns, array dimension ns n. y vector event counts length ns, array dimension ns n. Z (optional) regression matrix covariates dimension n p. Bs matrix B-splines time scale s. Ds difference matrix penalty. Wprior optional vector -priori weights. control_algorithm list optional values parameters iterative processes: maxiter maximum number iteration IWSL algorithm. Default 20. conv_crit convergence criteria, expressed difference estimates iteration +1. Default 1e-5. verbose Boolean. Default FALSE. TRUE monitors iteration process. monitor_ev Boolean. Default FALSE. TRUE monitors evaluation model log_10(rho_s) values.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_bic_fit_1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the BIC of 1ts model — get_bic_fit_1d","text":"bic value fitted model.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_bic_fit_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the BIC of 2ts model — get_bic_fit_2d","title":"Return the BIC of 2ts model — get_bic_fit_2d","text":"get_bic_fit_2d() fits 2ts model without individual level covariates returns BIC model. See also fit2tsmodel_ucminf() fit2ts().","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_bic_fit_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the BIC of 2ts model — get_bic_fit_2d","text":"","code":"get_bic_fit_2d(   lrho,   R,   Y,   Z = NULL,   Bu,   Bs,   Iu,   Is,   Du,   Ds,   Wprior = NULL,   ridge = 0,   control_algorithm = list(maxiter = 20, conv_crit = 1e-05, verbose = FALSE, monitor_ev =     FALSE) )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_bic_fit_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the BIC of 2ts model — get_bic_fit_2d","text":"lrho vector two elements, initial values \\(\\log_{10}(\\varrho_u)\\) \\(\\log_{10}(\\varrho_s)\\). R matrix (3d-array) exposure times dimension nu ns (nu ns n). Y matrix (3d-array) event counts dimension nu ns (nu ns n). Z (optional) regression matrix covariates values dimensions n p. Bu matrix B-splines u time scale dimension nu cu. Bs matrix B-splines s time scale dimension ns cs. Iu identity matrix dimension nbu nbu. identity matrix dimension nbs nbs. Du difference matrix u. Ds difference matrix s. Wprior optional matrix -priori weights. ridge ridge penalty parameter: default 0. control_algorithm list optional values parameters iterative processes: maxiter maximum number iteration IWSL algorithm. Default 20. conv_crit convergence criteria, expressed difference estimates iteration +1. Default 1e-5. verbose Boolean. Default FALSE. TRUE monitors iteration process. monitor_ev Boolean. Default FALSE. TRUE monitors evaluation model log_10(rho_s) values.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_bic_fit_2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the BIC of 2ts model — get_bic_fit_2d","text":"bic value fitted model.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hazard_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Get estimated (log-)hazard curve with 1 time scale — get_hazard_1d","title":"Get estimated (log-)hazard curve with 1 time scale — get_hazard_1d","text":"get_hazard_1d() takes input results model estimated fit1ts returns estimated smooth log-hazard smooth  hazard together standard errors. model includes covariates, baseline (log-)hazard returned. possible provide values define new grid plotting. specified, plotting done using B-splines basis estimation. function check parameters grid provided user compatible originally used construct B-splines estimating model. , grid adjusted accordingly warning returned.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hazard_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get estimated (log-)hazard curve with 1 time scale — get_hazard_1d","text":"","code":"get_hazard_1d(fitted_model, plot_grid = NULL)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hazard_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get estimated (log-)hazard curve with 1 time scale — get_hazard_1d","text":"fitted_model object class \"haz1ts\", output function fit1ts(). plot_grid (optional) named vector containing parameters build new grid intervals s plotting estimated hazard finer grid. must form: plot_grid = c(smin, smax, ds), smin, smax minimum maximum values desired intervals s, ds distance intervals s. specified, plotting done using B-splines basis estimation. function check parameters grid provided user compatible originally used construct B-splines estimating model. , grid adjusted accordingly warning returned.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hazard_1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get estimated (log-)hazard curve with 1 time scale — get_hazard_1d","text":"list following elements: new_plot_grid list new specifications grid plotting. hazard vector containing estimated hazard. loghazard vector containing estimated log-hazard. log10hazard vector containing estimated log10-hazard. SE_hazard vector containing estimated SEs hazard. SE_loghazard vector containing estimated SEs log-hazard. SE_log10hazard vector containing estimated SEs log10-hazard","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hazard_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Get estimated (log-)hazard surface with 2 time scales — get_hazard_2d","title":"Get estimated (log-)hazard surface with 2 time scales — get_hazard_2d","text":"get_hazard_2d() takes input results model estimated fit2ts returns estimated smooth log-hazard smooth hazard together standard errors. model includes covariates, baseline (log-)hazard returned. possible provide values define new grid plotting. specified, plotting done using B-splines basis estimation. function check parameters grid provided user compatible originally used construct B-splines estimating model. , grid adjusted accordingly warning returned.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hazard_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get estimated (log-)hazard surface with 2 time scales — get_hazard_2d","text":"","code":"get_hazard_2d(   fitted_model,   plot_grid = NULL,   where_slices = NULL,   direction = c(\"u\", \"s\", NULL),   tmax = NULL )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hazard_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get estimated (log-)hazard surface with 2 time scales — get_hazard_2d","text":"fitted_model object class \"haz2ts\", output function fit2ts(). plot_grid (optional) list containing parameters build new finer grid intervals u s plotting. must form: plot_grid = list(c(umin, umax, du), c(smin, smax, ds)), umin, umax smin, smax minimum maximum values desired intervals u s respectively, du, ds distances intervals u s respectively. Specifying new denser grid used evaluate B-spline bases used estimation grid plot estimated surfaces greater level details. specified, plotting done using B-splines bases estimation. function check parameters grid provided user compatible originally used construct B-splines estimating model. , grid adjusted accordingly warning returned. where_slices vector values cutting points desired slices surface. which_plot == \"slices\", please provide argument. direction which_plot == \"slices\", indicates direction cutting surface. u, surface cut selected values u (indicated where_slices), hence obtaining one-dimensional curves s. s, surface cut selected values s (indicated where_slices), hence obtaining one-dimensional curves u. tmax maximum value t plotted.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hazard_2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get estimated (log-)hazard surface with 2 time scales — get_hazard_2d","text":"list following elements: new_plot_grid list new specifications grid plotting. nBu B-spline basis u, evaluated new grid. nBs B-spline basis s, evaluated new grid. hazard matrix containing estimated hazard. loghazard matrix containing estimated log-hazard. log10hazardA matrix containing estimated log10-hazard. SE_hazard matrix containing estimated SEs hazard SE_loghazard matrix containing estimated SEs log-hazard SE_log10haz matrix containing estimated SEs log10-hazard","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hazard_2d_LMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Get estimated (log-)hazard surface with 2 time scales — get_hazard_2d_LMM","title":"Get estimated (log-)hazard surface with 2 time scales — get_hazard_2d_LMM","text":"get_hazard_2d_LMM() takes input object class 'haz2tsLMM' returns estimated smooth log-hazard, log10-hazard hazard surface together standard errors. model includes covariates, baseline (log-)hazard returned. possible provide values define new grid plotting. specified, B-splines bases used estimation considered. function check parameters grid provided user compatible originally used construct B-splines estimating model. , grid adjusted accordingly warning returned.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hazard_2d_LMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get estimated (log-)hazard surface with 2 time scales — get_hazard_2d_LMM","text":"","code":"get_hazard_2d_LMM(   fitted_model,   plot_grid,   where_slices = NULL,   direction = c(\"u\", \"s\", NULL),   tmax = NULL )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hazard_2d_LMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get estimated (log-)hazard surface with 2 time scales — get_hazard_2d_LMM","text":"fitted_model object class 'haz2tsLMM' output function fit2ts(). plot_grid list containing parameters build new finer grid intervals u s plotting. must form: plot_grid = list(c(umin, umax, du), c(smin, smax, ds)), umin, umax smin, smax minimum maximum values desired intervals u s respectively, du, ds distances intervals u s respectively. Specifying new denser grid used evaluate B-spline bases used estimation grid plot estimated surfaces greater level details. specified, plotting done using B-splines bases estimation. function check parameters grid provided user compatible originally used construct B-splines estimating model. , grid adjusted accordingly warning returned. objects class 'haz2ts' optional input, strongly recommend provide plotting grid object class 'haz2tsLMM', given evaluation B-splines works bit differently LMMsolver. where_slices vector values cutting points desired slices surface. which_plot == \"slices\", please provide argument. direction which_plot == \"slices\", indicates direction cutting surface. u, surface cut selected values u (indicated where_slices), hence obtaining one-dimensional curves s. s, surface cut selected values s (indicated where_slices), hence obtaining one-dimensional curves u. tmax maximum value t plotted.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hazard_2d_LMM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get estimated (log-)hazard surface with 2 time scales — get_hazard_2d_LMM","text":"list following elements: new_plot_grid list new specifications grid plotting. hazard matrix containing estimated hazard. loghazard matrix containing estimated log-hazard. log10hazardA matrix containing estimated log10-hazard. SE_hazard matrix containing estimated SEs hazard SE_loghazard matrix containing estimated SEs log-hazard SE_log10haz matrix containing estimated SEs log10-hazard","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hr.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Hazard Ratios with their Standard Errors — get_hr","title":"Get the Hazard Ratios with their Standard Errors — get_hr","text":"get_hr() takes input results model covariates estimated fit2ts fit1ts returns estimated hazard ratios together standard errors.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Hazard Ratios with their Standard Errors — get_hr","text":"","code":"get_hr(fitted_model)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Hazard Ratios with their Standard Errors — get_hr","text":"fitted_model list returned function fit2ts fit1ts.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/get_hr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Hazard Ratios with their Standard Errors — get_hr","text":"list following elements: HR vector hazard ratios (calculated \\(\\exp(\\hat\\beta)\\)). SE_HR vector Standard Errors hazard ratios calculated via delta method. beta vector estimated \\(\\hat\\beta\\) coefficients. SE_beta vector Standard Errors beta coefficients.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/grid_search_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid search for the optimal 1ts model — grid_search_1d","title":"Grid search for the optimal 1ts model — grid_search_1d","text":"grid_search_1d() performs grid search minimum AIC BIC one time scale model. finds optimal values log_10(rho_s) returns estimated optimal model.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/grid_search_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid search for the optimal 1ts model — grid_search_1d","text":"","code":"grid_search_1d(   r,   y,   Z = NULL,   lrho,   Bs,   Ds,   Wprior = NULL,   optim_criterion = c(\"aic\", \"bic\"),   control_algorithm = list(maxiter = 20, conv_crit = 1e-05, verbose = FALSE, monitor_ev =     FALSE),   par_gridsearch = list(plot_aic = FALSE, plot_bic = FALSE, return_aic = TRUE, return_bic     = TRUE, mark_optimal = TRUE, main_aic = \"AIC grid\", main_bic = \"BIC grid\") )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/grid_search_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid search for the optimal 1ts model — grid_search_1d","text":"r vector exposure times length ns, array dimension ns n. y vector event counts length ns, array dimension ns n. Z (optional) regression matrix covariates dimension n p. lrho vector log_10(rho_s) values. Bs matrix B-splines time scale s. Ds difference matrix penalty. Wprior optional vector -priori weights. optim_criterion criterion used optimization: \"aic\" (default) \"bic\". control_algorithm list optional values parameters iterative processes: maxiter maximum number iteration IWSL algorithm. Default 20. conv_crit convergence criteria, expressed difference estimates iteration +1. Default 1e-5. verbose Boolean. Default FALSE. TRUE monitors iteration process. monitor_ev Boolean. Default FALSE. TRUE monitors evaluation model log_10(rho_s) values. par_gridsearch list parameters grid_search: plot_aic Boolean. Default FALSE. TRUE, plot AIC values grid log_10(rhos) values. plot_bic Boolean. Default FALSE. TRUE, plot BIC values grid log_10(rhos) values. return_aic Boolean. Default TRUE. Return AIC values. return_bic Boolean. Default TRUE. Return BIC values. mark_optimal Boolean. Default TRUE. plot AIC BIC values returned, marks optimal log_10(rho_s) plot. main_aic title AIC plot. Default \"AIC grid\". main_bic title BIC plot. Default \"BIC grid\".","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/grid_search_1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid search for the optimal 1ts model — grid_search_1d","text":"object class h1tsfit following elements: optimal_model list containing results optimal model. optimal_logrho optimal value log10(rho_s). P_optimal optimal penalty matrix P. AIC (par_gridsearch$return_aic == TRUE) vector AIC values. BIC (par_gridsearch$return_bic == TRUE) vector BIC values.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/grid_search_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid search for the optimal 2ts model — grid_search_2d","title":"Grid search for the optimal 2ts model — grid_search_2d","text":"grid_search_2d() performs grid search minimum AIC BIC two time scales model. finds optimal values log_10(rho_u) log_10(rho_s) returns estimated optimal model.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/grid_search_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid search for the optimal 2ts model — grid_search_2d","text":"","code":"grid_search_2d(   lru,   lrs,   R,   Y,   Bu,   Bs,   Z = NULL,   Iu,   Is,   Du,   Ds,   Wprior = NULL,   ridge = 0,   optim_criterion = c(\"aic\", \"bic\"),   control_algorithm = list(maxiter = 20, conv_crit = 1e-05, verbose = FALSE, monitor_ev =     FALSE),   par_gridsearch = list(plot_aic = FALSE, plot_bic = FALSE, return_aic = TRUE, return_bic     = TRUE, col = grey.colors(n = 10), plot_contour = FALSE, mark_optimal = TRUE,     main_aic = \"AIC grid\", main_bic = \"BIC grid\") )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/grid_search_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid search for the optimal 2ts model — grid_search_2d","text":"lru vector log_10(rho_u) values. lrs vector log_10(rho_s) values. R matrix (3d-array) exposure times dimension nu ns (nu ns n). Y matrix (3d-array) event counts dimension nu ns (nu ns n). Bu matrix B-splines u time scale dimension nu cu. Bs matrix B-splines s time scale dimension ns cs. Z (optional) regression matrix covariates values dimensions n p. Iu identity matrix dimension nbu nbu. identity matrix dimension nbs nbs. Du difference matrix u. Ds difference matrix s. Wprior optional matrix -priori weights. ridge ridge penalty parameter: default 0. optim_criterion criterion used optimization: \"aic\" (default) \"bic\". control_algorithm list optional values parameters iterative processes: maxiter maximum number iteration IWSL algorithm. Default 20. conv_crit convergence criteria, expressed difference estimates iteration +1. Default 1e-5. verbose Boolean. Default FALSE. TRUE monitors iteration process. monitor_ev Boolean. Default FALSE. TRUE monitors evaluation model log_10(rho_s) values. par_gridsearch list parameters grid_search: plot_aic Boolean. Default FALSE. TRUE, plot AIC values grid log_10(rho_u) log_10(rho_s) values. plot_bic Boolean. Default FALSE. TRUE, plot BIC values grid log_10(rho_u) log_10(rho_s) values. return_aic Boolean. Default TRUE. Return AIC values. return_bic Boolean. Default TRUE. Return BIC values. col color palette used AIC/BIC plot. Default grDevices::gray.colors(n=10). plot_contour Boolean. Default TRUE. Adds white contour lines AIC/BIC plot. mark_optimal Boolean. Default TRUE. plot AIC BIC values returned, marks optimal combination log_10(rho_u) log_10(rho_s) plot. main_aic title AIC plot. Default \"AIC grid\". main_bic title BIC plot. Default \"BIC grid\".","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/grid_search_2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid search for the optimal 2ts model — grid_search_2d","text":"object class h2tsfit following elements: optimal_model list containing results optimal model. optimal_logrho optimal couple log_10(rho_u) log_10(rho_s) values. P_optimal optimal penalty matrix P. AIC (par_gridsearch$return_aic == TRUE) vector AIC values. BIC (par_gridsearch$return_bic == TRUE) vector BIC values.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/haz2tsLMM_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function for object of class 'haz2tsLMM' — haz2tsLMM_summary","title":"Summary function for object of class 'haz2tsLMM' — haz2tsLMM_summary","text":"Summary function object class 'haz2tsLMM'","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/haz2tsLMM_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function for object of class 'haz2tsLMM' — haz2tsLMM_summary","text":"","code":"haz2tsLMM_summary(x, ...)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/haz2tsLMM_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary function for object of class 'haz2tsLMM' — haz2tsLMM_summary","text":"x object class 'haz2tsLMM' returned function fit2ts() ... arguments","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/haz2tsLMM_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary function for object of class 'haz2tsLMM' — haz2tsLMM_summary","text":"printed summary fitted model, including optimal smoothing paramters, effective dimension ED AIC/BIC. model covariates, regression table also returned.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/haz2ts_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function for object of class 'haz2ts' — haz2ts_summary","title":"Summary function for object of class 'haz2ts' — haz2ts_summary","text":"Summary function object class 'haz2ts'","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/haz2ts_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function for object of class 'haz2ts' — haz2ts_summary","text":"","code":"haz2ts_summary(x, ...)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/haz2ts_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary function for object of class 'haz2ts' — haz2ts_summary","text":"x object class 'haz2ts' returned function fit2ts() ... arguments","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/haz2ts_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary function for object of class 'haz2ts' — haz2ts_summary","text":"printed summary fitted model","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/imageplot_2ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Image Plot of 2ts hazard — imageplot_2ts","title":"Image Plot of 2ts hazard — imageplot_2ts","text":"imageplot_2ts() plots image two time scales hazard contour lines.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/imageplot_2ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image Plot of 2ts hazard — imageplot_2ts","text":"","code":"imageplot_2ts(x, y, z, plot_options = list(), ...)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/imageplot_2ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image Plot of 2ts hazard — imageplot_2ts","text":"x coordinates x-axis. vector intervals u axis (default), matrix corner points parallelograms t time scale, vector intervals t time scale. y coordinates y-axis. vector intervals s time scale (default), matrix corner points parallelograms s time scale. z values surface plot, organized matrix dimensions compatible x y. default plot hazard. plot_options list options plot: loghazard Boolean. Default FALSE. FALSE function returns plot hazard surface, TRUE function returns plot log-hazard surface. log10hazard Boolean. Default FALSE. TRUE, log10-hazard surface plotted. original Boolean. Default TRUE. Plot (log-)hazard (t,s)-plane. FALSE, (log-)hazard plotted (u,s)-plane. rectangular_grid Boolean. Default FALSE. TRUE, rectangular grid used plotting also (t,s)-plane opposed grid parallelograms used default (t,s)-plane. col_palette function defining color palette. default palette rev(viridis::plasma()). n_shades number color shades plot, default 50. breaks vector breaks color legend. n_shades provided, length n_shades + 1. Otherwise, n_shades recalculated accordingly. show_legend Boolean. Default TRUE. FALSE legend plotted, useful multi-panel figures common legend. Works plots rectangular grid! tmax maximum value t plotted. main title plot. xlab label first time axis (plotted x axis). ylab label second time axis (plotted y axis). xlim vector two elements defining limits time scale x axis. ylim vector two elements defining limits time scale y axis. cex_main magnification used main title, default 1.2. cex_lab magnification used axis labels, default 1. contour_lines Boolean. Default FALSE. TRUE white contour lines added surfaces. contour_col color contour lines. Default white. contour_cex magnification used contour lines. Default .8. contour_nlev number contour levels. Default 10. ... arguments image.plot image","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/imageplot_2ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image Plot of 2ts hazard — imageplot_2ts","text":"image plot (log-) hazard surface.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/imageplot_2ts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Image Plot of 2ts hazard — imageplot_2ts","text":"default call implemented plot.h2tsfit.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/imageplot_SE.html","id":null,"dir":"Reference","previous_headings":"","what":"Image Plot of Standard Errors for the 2ts hazard — imageplot_SE","title":"Image Plot of Standard Errors for the 2ts hazard — imageplot_SE","text":"imageplot_SE() plots image SEs two time scales hazard contour lines.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/imageplot_SE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image Plot of Standard Errors for the 2ts hazard — imageplot_SE","text":"","code":"imageplot_SE(x, y, z, plot_options = list(), ...)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/imageplot_SE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image Plot of Standard Errors for the 2ts hazard — imageplot_SE","text":"x coordinates x-axis. vector intervals u axis (default), matrix corner points parallelograms t time scale, vector intervals t time scale. y coordinates y-axis. vector intervals s time scale (default), matrix corner points parallelograms s time scale. z values surface plot, organized matrix dimensions compatible x y. can SEs hazard, SEs log-hazard SEs log10-hazard. plot_options list options plot: loghazard Boolean. Default FALSE. FALSE function returns plot standard errors hazard surface, TRUE function returns plot standard errors log-hazard surface. log10hazard Boolean. Default FALSE. TRUE, function returns plot standard errors log10-hazard surface original Boolean. Default TRUE. Plot (log-)hazard (t,s)-plane. FALSE, (log-)hazard plotted (u,s)-plane. rectangular_grid Boolean. Default FALSE. TRUE, rectangular grid used plotting also (t,s)-plane opposed grid parallelograms used default (t,s)-plane. col_palette function defining color palette. default palette rev(colorspace::sequential_hcl(n = 50, \"Red-Purple\")). n_shades number color shades plot, default 50. breaks vector breaks color legend. n_shades provided, length n_shades + 1. Otherwise, n_shades recalculated accordingly. show_legend Boolean. Default TRUE. FALSE legend plotted, useful multi-panel figures common legend. Works plots rectangular grid! tmax maximum value t plotted. main title plot. xlab label first time axis (plotted x axis). ylab label second time axis (plotted y axis). xlim vector two elements defining limits time scale x axis. ylim vector two elements defining limits time scale y axis. cex_main magnification used main title, default 1.2. cex_lab magnification used axis labels, default 1. contour_lines Boolean. Default FALSE. TRUE white contour lines added surfaces. contour_col color contour lines. Default white. contour_cex magnification used contour lines. Default .8. contour_nlev number contour levels. Default 10. ... arguments image.plot image","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/imageplot_SE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image Plot of Standard Errors for the 2ts hazard — imageplot_SE","text":"image plot SEs (log-) hazard surface.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/iwls_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterative Weighted Least Squares algorithm for 1ts model — iwls_1d","title":"Iterative Weighted Least Squares algorithm for 1ts model — iwls_1d","text":"iwls_1d() fits 1ts model IWLS algorithm.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/iwls_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterative Weighted Least Squares algorithm for 1ts model — iwls_1d","text":"","code":"iwls_1d(   r,   y,   Bs,   P,   Wprior = NULL,   control_algorithm = list(maxiter = 20, conv_crit = 1e-05, verbose = FALSE) )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/iwls_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterative Weighted Least Squares algorithm for 1ts model — iwls_1d","text":"r vector exposure times length ns. y vector event counts length ns. Bs matrix B-splines s time scale dimension ns cs. P penalty matrix dimension cs cs. Wprior optional vector length ns -priori weights. control_algorithm list optional values parameters iterative processes: maxiter maximum number iteration IWSL algorithm. Default 20. conv_crit convergence criteria, expressed difference estimates iteration +1. Default 1e-5. verbose Boolean. Default FALSE. TRUE monitors iteration process.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/iwls_1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iterative Weighted Least Squares algorithm for 1ts model — iwls_1d","text":"list following elements: alpha vector estimated P-splines coefficients length cs. SE_alpha vector estimated Standard Errors alpha coefficients, length cs. H hat-matrix. Cov full variance-covariance matrix. deviance deviance. ed effective dimension model. aic value AIC. bic value BIC. Bbases list B-spline basis Bs (list compatibility functions 2d).","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/make_bins.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct bins over one or more time axes — make_bins","title":"Construct bins over one or more time axes — make_bins","text":"make_bins() constructs bins time axes saves extremes bins vector.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/make_bins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct bins over one or more time axes — make_bins","text":"","code":"make_bins(   t_in = NULL,   t_out = NULL,   u = NULL,   s_in = NULL,   s_out,   min_t = NULL,   max_t = NULL,   min_u = NULL,   max_u = NULL,   min_s = NULL,   max_s = NULL,   dt = NULL,   du = NULL,   ds )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/make_bins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct bins over one or more time axes — make_bins","text":"t_in (optional) vector entry times time scale t. t_out (optional) vector exit times time scale t. u (optional) vector fixed-times entry process. s_in (optional) vector entry times time scale s. s_out vector exit times time scale s. min_t (optional) minimum value bins t. NULL, minimum t_in used. max_t (optional) maximum value bins t. NULL, maximum t_out used. min_u (optional) minimum value bins u. NULL, minimum u used. max_u (optional) maximum value bins u. NULL, maximum u used. min_s (optional) minimum value bins s. NULL, minimum s_in used. max_s (optional) maximum value bins s. NULL, maximum s_out used. dt (optional) scalar giving length intervals t time scale. du (optional) scalar giving length intervals u axis. ds scalar giving length intervals s time scale.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/make_bins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct bins over one or more time axes — make_bins","text":"list following elements: bins_t t_out provided, vector bins extremes time scale t midt t_out provided, vector midpoints bins t nt t_out provided, number bins t bins_u u provided, vector bins extremes u axis midu u provided, vector midpoints bins u nu u provided, number bins u bins_s vector bins extremes time scale s mids vector midpoints bins s ns number bins s","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/make_bins.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct bins over one or more time axes — make_bins","text":"allows construction bins time scales t s /fixed-time axis u. time scale s always required. See also prepare_data() conveniently prepare individual data analysis one, two time scales.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz1ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for a haz1ts object. — plot.haz1ts","title":"Plot method for a haz1ts object. — plot.haz1ts","text":"plot.haz1ts() plot method objects class haz1ts.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz1ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for a haz1ts object. — plot.haz1ts","text":"","code":"# S3 method for class 'haz1ts' plot(   x,   which_plot = c(\"hazard\", \"covariates\"),   plot_grid = NULL,   plot_options = list(),   ... )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz1ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for a haz1ts object. — plot.haz1ts","text":"x output function fit1ts. which_plot type plot required. Can one \"hazard\" (default) \"covariates\". plot_grid (optional) named vector containing parameters build new grid intervals s plotting estimated hazard finer grid. must form: plot_grid = c(smin, smax, ds), smin, smax minimum maximum values desired intervals s, ds distance intervals s. specified, plotting done using B-splines basis estimation. function check parameters grid provided user compatible originally used construct B-splines estimating model. , grid adjusted accordingly warning returned. plot_options list possible options plots: loghazard Boolean. Default FALSE. FALSE function returns plot hazard curve, TRUE function returns plot log-hazard curve. log10hazard Boolean. Default FALSE. TRUE returns plot log10-hazard curve. col color curve plotted. Default \"black\". add_CI Boolean. TRUE (default) confidence bands added. col_CI color confidence bands. default color curve, 50% transparancy level. main title plot. xlab label time axis (plotted x axis). ylab label y-axis (hazard, log-hazard log10-hazard). xlim vector two elements defining limits time scale x axis. ylim vector two elements defining limits function plotted y axis (hazard, log-hazard log10-hazard). xmin minimum value x-axis. ymin minimum value y-axis. cex_main magnification used main title, default 1.2 . cex_lab magnification used axis labels, default 1 . HR Boolean. TRUE HRs CIs plotted. Default FALSE (plot beta CIs). symmetric_CI Boolean. Default TRUE. plot HRs required (HR == TRUE), plot symmetrical Confidence Intervals, based SEs HRs calculated delta method. FALSE, CIs obtained exponentiating CIs betas. confidence level confidence CIs. Default .95 (alpha = 0.05). col_beta color plot covariates' effects. pch symbol plotting point estimates. ... arguments plot.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz1ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for a haz1ts object. — plot.haz1ts","text":"plot type required.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz1tsLMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for a haz1ts object. — plot.haz1tsLMM","title":"Plot method for a haz1ts object. — plot.haz1tsLMM","text":"plot.haz1tsLMM() plot method objects class haz1tsLMM.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz1tsLMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for a haz1ts object. — plot.haz1tsLMM","text":"","code":"# S3 method for class 'haz1tsLMM' plot(   x,   which_plot = c(\"hazard\", \"covariates\"),   plot_grid = NULL,   plot_options = list(),   ... )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz1tsLMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for a haz1ts object. — plot.haz1tsLMM","text":"x output function fit1ts. which_plot type plot required. Can one \"hazard\" (default) \"covariates\". plot_grid (optional) named vector containing parameters build new grid intervals s plotting estimated hazard finer grid. must form: plot_grid = c(smin, smax, ds), smin, smax minimum maximum values desired intervals s, ds distance intervals s. specified, plotting done using B-splines basis estimation. function check parameters grid provided user compatible originally used construct B-splines estimating model. , grid adjusted accordingly warning returned. plot_options list possible options plots: loghazard Boolean. Default FALSE. FALSE function returns plot hazard curve, TRUE function returns plot log-hazard curve. log10hazard Boolean. Default FALSE. TRUE returns plot log10-hazard curve. col color curve plotted. Default \"black\". add_CI Boolean. TRUE (default) confidence bands added. col_CI color confidence bands. default color curve, 50% transparency level. main title plot. xlab label time axis (plotted x axis). ylab label y-axis (hazard, log-hazard log10-hazard). xlim vector two elements defining limits time scale x axis. ylim vector two elements defining limits function plotted y axis (hazard, log-hazard log10-hazard). xmin minimum value x-axis. ymin minimum value y-axis. cex_main magnification used main title, default 1.2 . cex_lab magnification used axis labels, default 1 . HR Boolean. TRUE HRs CIs plotted. Default FALSE (plot beta CIs). symmetric_CI Boolean. Default TRUE. plot HRs required (HR == TRUE), plot symmetrical Confidence Intervals, based SEs HRs calculated delta method. FALSE, CIs obtained exponentiating CIs betas. confidence level confidence CIs. Default .95 (alpha = 0.05). col_beta color plot covariates' effects. pch symbol plotting point estimates. ... arguments plot.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz1tsLMM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for a haz1ts object. — plot.haz1tsLMM","text":"plot type required.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz1tsLMM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot method for a haz1ts object. — plot.haz1tsLMM","text":"function obtainSmoothTrend R-package LMMsolver used . refer interested readers https://biometris.github.io/LMMsolver/ details LMMsolver usage.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz2ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for a haz2ts object. — plot.haz2ts","title":"Plot method for a haz2ts object. — plot.haz2ts","text":"plot.haz2ts() plot method objects class haz2ts. produces plots fitted model two time scales (see fit2ts()), either original (t,s) plane, respecting constraint imposed relation two time scales, transformed (u,s) plane.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz2ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for a haz2ts object. — plot.haz2ts","text":"","code":"# S3 method for class 'haz2ts' plot(   x,   plot_grid = NULL,   which_plot = c(\"hazard\", \"covariates\", \"SE\", \"slices\"),   where_slices = NULL,   direction = c(NULL, \"u\", \"s\"),   plot_options = list(),   ... )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz2ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for a haz2ts object. — plot.haz2ts","text":"x output function fit2ts. object class \"haz2ts\". plot_grid (optional) list containing parameters build new finer grid intervals u s plotting. must form: plot_grid = list(c(umin, umax, du), c(smin, smax, ds)), umin, umax smin, smax minimum maximum values desired intervals u s respectively, du, ds distances intervals u s respectively. Specifying new denser grid used evaluate B-spline bases used estimation grid plot estimated surfaces greater level details. specified, plotting done using B-splines bases estimation. function check parameters grid provided user compatible originally used construct B-splines estimating model. , grid adjusted accordingly warning returned. which_plot type plot required. Can one \"hazard\" (default), \"covariates\", \"SE\" \"slices\". where_slices vector values cutting points desired slices surface. which_plot == \"slices\", please provide argument. direction which_plot == \"slices\", indicates direction cutting surface. u, surface cut selected values u (indicated where_slices), hence obtaining one-dimensional curves s. s, surface cut selected values s (indicated where_slices), hence obtaining one-dimensional curves u. plot_options list possible options plots: loghazard Boolean. Default FALSE. FALSE function returns plot hazard surface, TRUE function returns plot log-hazard surface. log10hazard Boolean. Default FALSE. TRUE, log_10 hazard surface plotted. cut_extrapolated Boolean. Default TRUE. Cuts away extrapolated area (log-)hazard surface plotting. rectangular_grid Boolean. Default FALSE. TRUE, rectangular grid used plotting also (t,s)-plane opposed grid parallelograms used default (t,s)-plane. original Boolean. Default TRUE. Plot (log-)hazard (/SEs) (t,s)-plane. FALSE, (log-)hazard (/SEs) plotted (u,s)-plane. tmax maximum value t plotted. col_palette function defining color palette. default palette viridis::rev(plasma()). Specifying color palette function allows greater flexibility passing palette vector. provide example create function color palette . n_shades number color shades plot, default 50. breaks vector breaks color legend. n_shades provided, length n_shades + 1. show_legend Boolean. Default TRUE. FALSE legend plotted, useful multi-panel figures common legend. Works plots rectangular grid (.e. transformed (u,s) plane) main title plot. xlab label first time axis (plotted x axis). ylab label second time axis (plotted y axis). xlim vector two elements defining limits time scale x axis. ylim vector two elements defining limits time scale y axis. contour_lines Boolean. Default FALSE. TRUE white contour lines added surfaces. contour_col color contour lines. Default white. contour_cex magnification used contour lines. Default .8. contour_nlev number contour levels desired. Default 10. cex_main magnification used main title, default 1.2 . cex_lab magnification used axis labels, default 1 . HR Boolean. TRUE HRs CIs plotted. Default FALSE (plot beta CIs). symmetric_CI Boolean. Default TRUE. plot HRs required (HR == TRUE), plot symmetrical Confidence Intervals, based SEs HRs calculated delta method. FALSE, CIs obtained exponentiating CIs betas. confidence level confidence CIs. Default .95 (alpha = 0.05). col_beta color plot covariates' effects. pch symbol plotting point estimates. lwd line width. ... arguments image.plot image","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz2ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for a haz2ts object. — plot.haz2ts","text":"plot fitted model.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz2ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for a haz2ts object. — plot.haz2ts","text":"","code":"# Create a color pallete function from a RColorBrewer palette, using the function # colorRampPalette from grDevices. if (FALSE) { # \\dontrun{   mypal <- function(n){            colorRampPalette(RColorBrewer::brewer.pal(9, \"YlGnBu\"))(n)            }   # if mod_haz is a fitted model of class haz2ts, the following code will   # produce a cross-sections plot of the hazard over `s` for selected values   # of `u`, with the palette specified above    plot(mod_haz,        which_plot = \"slices\",        where_slices = c(30, 60, 90, 180, 365, 1000, 2000),        direction = \"u\",        plot_options = list(col_palette = mypal,                            main = \"Cross-sections of the hazard\",                            xlab = \"Time since recurrence\",                            ylab = \"Hazard\")) } # }"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz2tsLMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for a haz2tsLMM object. — plot.haz2tsLMM","title":"Plot method for a haz2tsLMM object. — plot.haz2tsLMM","text":"plot.haz2tsLMM() plot method objects class haz2tsLMM. produces plots fitted model two time scales (see fit2ts()), fitted via LMMsolver. two-dimensional plots limited transformed plane, plots u s axes produced.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz2tsLMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for a haz2tsLMM object. — plot.haz2tsLMM","text":"","code":"# S3 method for class 'haz2tsLMM' plot(   x,   plot_grid = NULL,   which_plot = c(\"hazard\", \"covariates\", \"SE\", \"slices\"),   where_slices = NULL,   direction = c(NULL, \"u\", \"s\"),   plot_options = list(),   ... )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz2tsLMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for a haz2tsLMM object. — plot.haz2tsLMM","text":"x output function fit2ts. object class \"haz2tsLMM\". plot_grid list containing parameters build new finer grid intervals u s plotting. must form: plot_grid = list(c(umin, umax, du), c(smin, smax, ds)), umin, umax smin, smax minimum maximum values desired intervals u s respectively, du, ds distances intervals u s respectively. Specifying new denser grid used evaluate B-spline bases used estimation grid plot estimated surfaces greater level details. specified, plotting done using B-splines bases estimation. function check parameters grid provided user compatible originally used construct B-splines estimating model. , grid adjusted accordingly warning returned. objects class 'haz2ts' optional input, strongly recommend provide plotting grid object class 'haz2tsLMM', given evaluation B-splines works bit differently LMMsolver. which_plot type plot required. Can one \"hazard\" (default), \"slices\", \"covariates\" \"SE\". where_slices vector values cutting points desired slices surface. which_plot == \"slices\", please provide argument. direction which_plot == \"slices\", indicates direction cutting surface. u, surface cut selected values u (indicated where_slices), hence obtaining one-dimensional curves s. s, surface cut selected values s (indicated where_slices), hence obtaining one-dimensional curves u. plot_options list possible options plots: loghazard Boolean. Default FALSE. FALSE function returns plot hazard surface, TRUE function returns plot log-hazard surface. log10hazard Boolean. Default FALSE. TRUE, log10 hazard surface plotted. cut_extrapolated Boolean. Default TRUE. Cuts away extrapolated area (log-)hazard surface plotting. tmax maximum value t plotted. col_palette function defining color palette. default palette viridis::rev(plasma()). Specifying color palette function allows greater flexibility passing palette vector. provide example create function color palette . n_shades number color shades plot, default 50. breaks vector breaks color legend. n_shades provided, length n_shades + 1. show_legend Boolean. Default TRUE. FALSE legend plotted, useful multi-panel figures common legend. Works plots rectangular grid (.e. transformed (u,s) plane). main title plot. xlab label first time axis (plotted x axis). ylab label second time axis (plotted y axis). xlim vector two elements defining limits time scale x axis. ylim vector two elements defining limits time scale y axis. contour_lines Boolean. Default FALSE. TRUE contour lines added surfaces. contour_col color contour lines. Default white. contour_cex magnification used contour lines. Default .8. contour_nlev number contour levels desired. Default 10. cex_main magnification used main title, default 1.2 . cex_lab magnification used axis labels, default 1 . HR Boolean. TRUE HRs CIs plotted. Default FALSE (plot beta CIs). symmetric_CI Boolean. Default TRUE. plot HRs required (HR == TRUE), plot symmetrical Confidence Intervals, based SEs HRs calculated delta method. FALSE, CIs obtained exponentiating CIs betas. confidence level confidence CIs. Default .95 (alpha = 0.05). col_beta color plot covariates' effects. pch symbol plotting point estimates. lwd line width. ... arguments image.plot image","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz2tsLMM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for a haz2tsLMM object. — plot.haz2tsLMM","text":"plot fitted model.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz2tsLMM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot method for a haz2tsLMM object. — plot.haz2tsLMM","text":"function obtainSmoothTrend R-package LMMsolver used . refer interested readers https://biometris.github.io/LMMsolver/ details LMMsolver usage.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot.haz2tsLMM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for a haz2tsLMM object. — plot.haz2tsLMM","text":"","code":"# Create a color pallete function from a RColorBrewer palette, using the function # colorRampPalette from grDevices. if (FALSE) { # \\dontrun{ mypal <- function(n) {   colorRampPalette(RColorBrewer::brewer.pal(9, \"YlGnBu\"))(n) } # if mod_haz is a fitted model of class haz2ts, the following code will # produce a cross-sections plot of the hazard over `s` for selected values # of `u`, with the palette specified above  plot(mod_haz,   which_plot = \"slices\",   where_slices = c(30, 60, 90, 180, 365, 1000, 2000),   direction = \"u\",   plot_options = list(     col_palette = mypal,     main = \"Cross-sections of the hazard\",     xlab = \"Time since recurrence\",     ylab = \"Hazard\"   ) ) } # }"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot_slices.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot slices of the (log-) hazard — plot_slices","title":"Plot slices of the (log-) hazard — plot_slices","text":"plot_slices() plots slices (log-)hazard two time scales, selected values one two time dimensions.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot_slices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot slices of the (log-) hazard — plot_slices","text":"","code":"plot_slices(x, y, direction, plot_options = list())"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot_slices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot slices of the (log-) hazard — plot_slices","text":"x vector values x-axis. vector values axis opposite one sliced cut. y matrix (log-)hazard values. direction Either \"u\" \"s\". plot_options list options plot: loghazard Boolean. Default FALSE. FALSE function returns plot cross-sections hazard surface, TRUE function returns plot cross-sections log-hazard surface. log10hazard Boolean. Default FALSE. TRUE returns plot cross-sections log10-hazard surface. col_palette function defining color palette. default palette grDevices::gray.colors(). n_shades number color shades plot, default 50. main title plot. xlab label first time axis (plotted x axis). ylab label second time axis (plotted y axis). xlim vector two elements defining limits time scale x axis. ylim vector two elements defining limits time scale y axis. cex_main magnification used main title, default 1.2. cex_lab magnification used axis labels, default 1. lwd line's width. Default 2.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/plot_slices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot slices of the (log-) hazard — plot_slices","text":"plot slices hazard cut selected points.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare raw data by binning them in 1d or 2d — prepare_data","title":"Prepare raw data by binning them in 1d or 2d — prepare_data","text":"prepare_data() prepares raw individual time--event data hazard estimation 1d 2d. Given raw data, function first constructs bins one two time axes computes aggregated (individual) vectors matrices exposure times events indicators. data.frame covariates values can provided user.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare raw data by binning them in 1d or 2d — prepare_data","text":"","code":"prepare_data(   t_in = NULL,   t_out = NULL,   u = NULL,   s_in = NULL,   s_out,   events,   min_t = NULL,   max_t = NULL,   min_u = NULL,   max_u = NULL,   min_s = NULL,   max_s = NULL,   dt = NULL,   du = NULL,   ds,   individual = FALSE,   covs = NULL )"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare raw data by binning them in 1d or 2d — prepare_data","text":"t_in (optional) vector entry times time scale t. t_out (optional) vector exit times time scale t. u (optional) vector fixed-times entry process. s_in (optional) vector entry times time scale s. s_out vector exit times time scale s. events vector event's indicators (possible values 0/1). min_t (optional) minimum value bins t. NULL, minimum t_in used. max_t (optional) maximum value bins t. NULL, maximum t_out used. min_u (optional) minimum value bins u. NULL, minimum u used. max_u (optional) maximum value bins u. NULL, maximum u used. min_s (optional) minimum value bins s. NULL, minimum s_in used. max_s (optional) maximum value bins s. NULL, maximum s_out used. dt (optional) scalar giving length intervals t time scale. du (optional) scalar giving length intervals u axis. ds scalar giving length intervals s time scale. individual Boolean. Default FALSE: FALSE computes matrices R Y collectively observations; TRUE computes matrices R Y separately individual record. covs data.frame variables used covariates. function create dummy variables factor variable passed argument covs. variable class character passed argument, converted factor.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare raw data by binning them in 1d or 2d — prepare_data","text":"list following elements: bins list: bins_t t_out provided, vector bins extremes time scale t. mid_t t_out provided, vector midpoints bins t. nt t_out provided, number bins t. bins_u u provided, vector bins extremes u axis. midu u provided, vector midpoints bins u. nu u provided, number bins u. bins_s vector bins extremes time scale s. mids vector midpoints bins s. ns number bins s. bindata: r R array exposure times: binning data one time scale vector. binning data two time scales individual == TRUE R array dimension nu ns n, otherwise array dimension nu ns y Y array event counts: binning data one time scale vector. binning data two time scales individual == TRUE Y array dimension nu ns n, otherwise array dimension nu ns Z matrix covariates' values used model, dimension n p","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/prepare_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prepare raw data by binning them in 1d or 2d — prepare_data","text":"Angela Carollo carollo@demogr.mpg.de","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/prepare_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare raw data by binning them in 1d or 2d — prepare_data","text":"","code":"# Bin data over s = time since recurrence only, with intervals of length 30 days # aggregated data (no covariates) binned_data <- prepare_data(s_out = reccolon2ts$timesr, events = reccolon2ts$status, ds = 30) #> `s_in = NULL`. I will use `s_in = 0` for all observations. # Visualize vector of event counts print(binned_data$bindata$y) #>  [1] 14 24 16 11 24 22 20 10 24 26 13 19 10  9 11 11 10 10  9 13 10  7 10  7  4 #> [26]  4  7  5  8  4  1  2  5  5  5  0  0  1  1  1  1  1  1  0  0  0  1  2  1  1 #> [51]  0  1  0  0  0  2  1  0  1  0  1  0  0  0  1  0  0  0  0  0  0  0  0  0  0 #> [76]  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0 # Visualize midpoints of the bins print(binned_data$bins$mids) #>  [1]   15   45   75  105  135  165  195  225  255  285  315  345  375  405  435 #> [16]  465  495  525  555  585  615  645  675  705  735  765  795  825  855  885 #> [31]  915  945  975 1005 1035 1065 1095 1125 1155 1185 1215 1245 1275 1305 1335 #> [46] 1365 1395 1425 1455 1485 1515 1545 1575 1605 1635 1665 1695 1725 1755 1785 #> [61] 1815 1845 1875 1905 1935 1965 1995 2025 2055 2085 2115 2145 2175 2205 2235 #> [76] 2265 2295 2325 2355 2385 2415 2445 2475 2505 2535 2565 2595 2625 2655 2685 #> [91] 2715 # Visualize number of bins print(binned_data$bins$ns) #> [1] 91   # Now using ds = .3 and the same variable measured in years binned_data <- prepare_data(s_out = reccolon2ts$timesr_y, events = reccolon2ts$status, ds = .3) #> `s_in = NULL`. I will use `s_in = 0` for all observations. # Visualize vector of exposure timess print(binned_data$bindata$r) #>  [1] 128.9234086 108.6935661  86.6990418  67.7699521  55.8161533  43.9006160 #>  [7]  33.6388090  26.2145791  20.8121150  16.9198494  14.2230664  12.1813142 #> [13]  11.2851472  10.0655715   9.0108145   7.7641342   6.0433949   4.7993155 #> [19]   2.9854209   2.0730322   1.2588638   0.9572895   0.8856947   0.3787817 #> [25]   0.2606434   # Bin data over u = time at recurrence and s = time since recurrence, measured in days # aggregated data (no covariates) # Note that if we do not provide du this is taken to be equal to ds binned_data <- prepare_data(   u = reccolon2ts$timer, s_out = reccolon2ts$timesr,   events = reccolon2ts$status, ds = 30 ) #> `s_in = NULL`. I will use `s_in = 0` for all observations. #> `s_in = NULL`. I will use `s_in = 0` for all observations.  # Visualize matrix of event counts print(binned_data$bindata$Y) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,]    1    0    0    0    1    0    0    0    0     0     0     0     0 #>  [2,]    1    2    3    0    0    0    0    0    1     0     0     0     0 #>  [3,]    0    5    1    0    2    2    1    0    2     2     0     2     0 #>  [4,]    1    4    0    1    1    3    2    1    3     0     1     0     0 #>  [5,]    1    1    2    1    1    1    1    0    0     0     0     0     0 #>  [6,]    2    1    2    1    1    2    1    0    2     4     2     0     0 #>  [7,]    1    0    1    1    1    1    2    0    2     2     1     0     0 #>  [8,]    1    3    0    0    1    2    3    0    1     1     0     5     2 #>  [9,]    1    1    1    0    1    2    0    0    0     0     2     1     0 #> [10,]    2    0    0    1    2    0    1    1    2     2     2     1     1 #> [11,]    0    2    1    0    0    1    0    2    0     2     0     1     1 #> [12,]    0    0    0    1    1    0    2    0    1     1     1     0     1 #> [13,]    0    1    1    0    4    0    1    0    0     0     0     0     0 #> [14,]    0    0    0    0    0    1    0    0    1     0     1     1     0 #> [15,]    0    1    0    0    0    0    1    0    1     1     0     2     0 #> [16,]    0    0    0    1    1    0    0    1    1     0     0     1     0 #> [17,]    0    0    0    0    1    1    2    0    1     0     1     0     2 #> [18,]    0    0    0    0    3    1    0    2    0     1     0     1     0 #> [19,]    0    0    1    0    0    1    1    0    0     1     0     1     0 #> [20,]    0    0    1    1    0    0    0    0    1     1     1     0     0 #> [21,]    0    1    0    0    0    0    0    0    0     0     0     0     1 #> [22,]    0    0    0    0    1    0    0    0    1     1     0     0     1 #> [23,]    0    0    0    0    0    0    0    0    1     1     0     0     0 #> [24,]    0    1    0    0    1    0    0    0    1     0     0     0     0 #> [25,]    0    0    0    0    0    1    0    1    0     2     0     0     0 #> [26,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [27,]    0    0    1    0    0    0    1    0    0     0     0     0     0 #> [28,]    1    0    0    0    0    0    0    0    0     0     0     0     0 #> [29,]    0    0    0    0    0    1    0    0    0     1     0     0     0 #> [30,]    0    1    0    0    0    0    0    1    0     0     1     0     0 #> [31,]    1    0    0    0    0    1    0    0    0     1     0     0     0 #> [32,]    0    0    0    1    0    0    0    0    0     0     0     0     0 #> [33,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [34,]    0    0    0    0    0    0    1    0    2     0     0     0     0 #> [35,]    0    0    0    0    0    0    0    0    0     1     0     0     0 #> [36,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [37,]    0    0    0    0    0    1    0    0    0     0     0     0     0 #> [38,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [39,]    0    0    0    0    0    0    0    0    0     0     0     1     0 #> [40,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [41,]    0    0    0    0    0    0    0    0    0     0     0     0     1 #> [42,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [43,]    0    0    0    0    0    0    0    1    0     0     0     0     0 #> [44,]    0    0    0    1    0    0    0    0    0     0     0     0     0 #> [45,]    0    0    0    0    0    0    0    0    0     0     0     1     0 #> [46,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [47,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [48,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [49,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [50,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [51,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [52,]    0    0    0    0    1    0    0    0    0     0     0     0     0 #> [53,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [54,]    0    0    0    0    0    0    0    0    0     1     0     0     0 #> [55,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [56,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [57,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [58,]    0    0    1    0    0    0    0    0    0     0     0     0     0 #> [59,]    1    0    0    0    0    0    0    0    0     0     0     0     0 #> [60,]    0    0    0    0    0    0    0    0    0     0     0     1     0 #> [61,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [62,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [63,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [64,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [65,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [66,]    0    0    0    1    0    0    0    0    0     0     0     0     0 #> [67,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [68,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [69,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [70,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [71,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [72,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [73,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [74,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [75,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #> [76,]    0    0    0    0    0    0    0    0    0     0     0     0     0 #>       [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] #>  [1,]     2     0     0     0     0     0     0     1     0     0     0     0 #>  [2,]     1     0     0     0     1     0     0     0     0     0     0     0 #>  [3,]     0     0     0     0     0     0     0     0     0     1     0     0 #>  [4,]     1     0     0     0     0     1     1     1     0     0     0     0 #>  [5,]     0     1     0     1     0     1     1     1     0     0     1     0 #>  [6,]     1     1     0     1     1     1     1     0     0     0     1     0 #>  [7,]     0     0     1     1     0     0     0     0     0     0     0     0 #>  [8,]     0     0     0     0     0     0     0     0     0     2     0     0 #>  [9,]     0     1     1     2     0     0     0     1     1     1     0     0 #> [10,]     0     0     1     0     0     0     0     0     0     1     0     0 #> [11,]     0     0     2     0     0     1     1     0     0     0     1     0 #> [12,]     0     0     0     0     0     0     1     1     0     0     0     0 #> [13,]     1     1     0     0     0     1     0     0     0     0     0     0 #> [14,]     0     1     0     1     0     1     0     0     0     0     1     0 #> [15,]     0     0     0     0     0     0     1     0     0     0     0     0 #> [16,]     0     0     0     0     1     0     0     0     0     1     0     1 #> [17,]     1     0     0     1     1     0     0     0     0     1     0     0 #> [18,]     0     1     0     0     0     0     1     0     0     0     0     0 #> [19,]     0     0     1     0     0     0     1     1     0     0     0     1 #> [20,]     0     0     0     0     0     0     0     1     1     0     0     1 #> [21,]     0     0     1     0     3     0     0     0     1     0     0     0 #> [22,]     0     0     1     1     0     0     0     0     0     0     0     0 #> [23,]     0     0     0     0     2     0     1     1     0     0     0     0 #> [24,]     0     1     0     0     0     1     1     0     0     0     0     0 #> [25,]     0     0     1     0     0     0     1     0     0     0     0     0 #> [26,]     1     1     0     0     0     0     0     0     0     0     0     0 #> [27,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [28,]     0     1     0     0     0     0     0     0     0     0     1     0 #> [29,]     0     0     0     0     0     0     1     0     1     0     0     0 #> [30,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [31,]     0     1     1     0     0     0     0     0     0     0     0     0 #> [32,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [33,]     0     0     0     0     0     1     0     0     0     0     0     0 #> [34,]     0     0     0     0     0     0     0     0     1     0     0     0 #> [35,]     0     0     0     0     0     0     1     0     0     0     0     1 #> [36,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [37,]     0     0     0     0     0     0     0     0     1     1     0     0 #> [38,]     0     0     0     0     0     0     0     0     0     1     0     0 #> [39,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [40,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [41,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [42,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [43,]     0     0     0     1     0     0     0     0     0     0     0     0 #> [44,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [45,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [46,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [47,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [48,]     0     1     0     0     0     0     0     0     1     0     0     0 #> [49,]     1     0     0     0     0     0     0     0     0     0     0     0 #> [50,]     0     0     0     1     0     0     0     0     0     0     0     0 #> [51,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [52,]     0     0     0     0     0     0     0     1     0     0     0     0 #> [53,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [54,]     0     0     0     0     1     0     0     0     0     0     0     0 #> [55,]     0     0     0     0     0     1     0     0     0     0     0     0 #> [56,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [57,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [58,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [59,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [60,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [61,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [62,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [63,]     0     0     0     0     0     0     0     1     0     0     0     0 #> [64,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [65,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [66,]     0     0     0     0     0     0     0     0     0     0     1     0 #> [67,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [68,]     0     0     0     0     0     0     0     0     0     0     1     0 #> [69,]     0     0     1     0     0     0     0     0     0     0     0     0 #> [70,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [71,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [72,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [73,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [74,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [75,]     0     0     0     0     0     0     0     0     0     1     0     0 #> [76,]     0     0     0     0     0     0     0     0     0     0     0     0 #>       [,26] [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] #>  [1,]     1     0     0     0     0     0     0     0     0     0     0     0 #>  [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [3,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [4,]     0     1     0     2     0     0     0     1     0     0     0     0 #>  [5,]     0     1     0     0     0     0     0     0     0     0     0     0 #>  [6,]     0     0     0     1     0     0     0     0     0     0     0     0 #>  [7,]     1     0     0     0     1     0     0     0     1     0     0     0 #>  [8,]     0     0     0     0     1     0     0     0     0     1     0     0 #>  [9,]     0     2     0     0     0     0     0     1     0     1     0     0 #> [10,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [11,]     0     0     0     1     0     0     0     0     0     0     0     0 #> [12,]     0     0     1     1     0     0     0     1     0     0     0     0 #> [13,]     0     0     0     1     0     0     0     0     0     1     0     0 #> [14,]     0     0     0     0     0     0     0     0     0     1     0     0 #> [15,]     0     0     1     1     0     0     0     0     1     0     0     0 #> [16,]     0     0     0     0     0     1     0     1     0     0     0     0 #> [17,]     0     0     0     0     0     0     1     0     0     0     0     0 #> [18,]     0     0     1     0     0     0     0     0     1     0     0     0 #> [19,]     0     0     0     0     0     0     0     0     1     0     0     0 #> [20,]     0     1     0     0     0     0     0     0     0     0     0     0 #> [21,]     0     0     1     0     0     0     0     0     0     0     0     0 #> [22,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [23,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [24,]     1     0     0     0     0     0     0     0     0     0     0     0 #> [25,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [26,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [27,]     0     0     1     0     0     0     0     0     0     0     0     0 #> [28,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [29,]     0     0     0     0     0     0     0     0     0     1     0     0 #> [30,]     0     0     0     1     0     0     0     0     0     0     0     0 #> [31,]     0     0     0     0     0     0     0     1     0     0     0     0 #> [32,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [33,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [34,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [35,]     0     1     0     0     0     0     0     0     0     0     0     0 #> [36,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [37,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [38,]     0     0     0     0     1     0     1     0     0     0     0     0 #> [39,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [40,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [41,]     0     0     0     0     1     0     0     0     0     0     0     0 #> [42,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [43,]     0     0     0     0     0     0     0     0     1     0     0     0 #> [44,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [45,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [46,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [47,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [48,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [49,]     0     1     0     0     0     0     0     0     0     0     0     0 #> [50,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [51,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [52,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [53,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [54,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [55,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [56,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [57,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [58,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [59,]     1     0     0     0     0     0     0     0     0     0     0     0 #> [60,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [61,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [62,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [63,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [64,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [65,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [66,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [67,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [68,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [69,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [70,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [71,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [72,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [73,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [74,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [75,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [76,]     0     0     0     0     0     0     0     0     0     0     0     0 #>       [,38] [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] #>  [1,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [3,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [4,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [5,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [6,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [7,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [8,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [9,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [10,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [11,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [12,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [13,]     0     0     1     0     0     0     0     0     0     1     0     0 #> [14,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [15,]     0     0     0     0     0     0     0     0     0     0     1     0 #> [16,]     0     0     0     0     0     1     0     0     0     0     0     0 #> [17,]     0     0     0     0     0     0     0     0     0     0     0     1 #> [18,]     1     0     0     0     0     0     0     0     0     0     0     0 #> [19,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [20,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [21,]     0     0     0     0     1     0     0     0     0     0     0     0 #> [22,]     0     0     0     1     0     0     0     0     0     0     0     0 #> [23,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [24,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [25,]     0     1     0     0     0     0     0     0     0     0     0     0 #> [26,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [27,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [28,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [29,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [30,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [31,]     0     0     0     0     0     0     0     0     0     0     1     0 #> [32,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [33,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [34,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [35,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [36,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [37,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [38,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [39,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [40,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [41,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [42,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [43,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [44,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [45,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [46,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [47,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [48,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [49,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [50,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [51,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [52,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [53,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [54,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [55,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [56,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [57,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [58,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [59,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [60,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [61,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [62,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [63,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [64,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [65,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [66,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [67,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [68,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [69,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [70,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [71,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [72,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [73,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [74,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [75,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [76,]     0     0     0     0     0     0     0     0     0     0     0     0 #>       [,50] [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] #>  [1,]     0     0     0     0     0     0     0     0     0     1     0     0 #>  [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [3,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [4,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [5,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [6,]     1     0     0     0     0     0     0     0     0     0     0     0 #>  [7,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [8,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [9,]     0     0     0     0     0     0     1     0     0     0     0     0 #> [10,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [11,]     0     0     0     0     0     0     0     1     0     0     0     1 #> [12,]     0     0     1     0     0     0     0     0     0     0     0     0 #> [13,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [14,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [15,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [16,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [17,]     0     0     0     0     0     0     1     0     0     0     0     0 #> [18,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [19,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [20,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [21,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [22,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [23,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [24,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [25,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [26,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [27,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [28,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [29,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [30,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [31,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [32,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [33,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [34,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [35,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [36,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [37,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [38,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [39,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [40,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [41,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [42,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [43,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [44,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [45,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [46,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [47,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [48,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [49,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [50,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [51,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [52,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [53,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [54,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [55,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [56,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [57,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [58,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [59,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [60,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [61,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [62,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [63,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [64,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [65,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [66,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [67,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [68,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [69,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [70,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [71,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [72,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [73,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [74,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [75,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [76,]     0     0     0     0     0     0     0     0     0     0     0     0 #>       [,62] [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] #>  [1,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [3,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [4,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [5,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [6,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [7,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [8,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [9,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [10,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [11,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [12,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [13,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [14,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [15,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [16,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [17,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [18,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [19,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [20,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [21,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [22,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [23,]     0     0     0     1     0     0     0     0     0     0     0     0 #> [24,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [25,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [26,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [27,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [28,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [29,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [30,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [31,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [32,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [33,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [34,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [35,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [36,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [37,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [38,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [39,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [40,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [41,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [42,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [43,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [44,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [45,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [46,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [47,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [48,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [49,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [50,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [51,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [52,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [53,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [54,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [55,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [56,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [57,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [58,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [59,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [60,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [61,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [62,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [63,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [64,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [65,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [66,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [67,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [68,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [69,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [70,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [71,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [72,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [73,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [74,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [75,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [76,]     0     0     0     0     0     0     0     0     0     0     0     0 #>       [,74] [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] #>  [1,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [2,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [3,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [4,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [5,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [6,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [7,]     0     0     0     0     0     0     0     0     0     0     0     0 #>  [8,]     0     0     0     0     1     0     0     0     0     0     0     0 #>  [9,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [10,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [11,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [12,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [13,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [14,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [15,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [16,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [17,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [18,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [19,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [20,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [21,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [22,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [23,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [24,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [25,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [26,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [27,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [28,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [29,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [30,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [31,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [32,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [33,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [34,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [35,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [36,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [37,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [38,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [39,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [40,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [41,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [42,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [43,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [44,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [45,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [46,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [47,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [48,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [49,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [50,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [51,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [52,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [53,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [54,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [55,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [56,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [57,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [58,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [59,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [60,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [61,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [62,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [63,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [64,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [65,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [66,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [67,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [68,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [69,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [70,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [71,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [72,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [73,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [74,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [75,]     0     0     0     0     0     0     0     0     0     0     0     0 #> [76,]     0     0     0     0     0     0     0     0     0     0     0     0 #>       [,86] [,87] [,88] [,89] [,90] [,91] #>  [1,]     0     0     0     0     0     0 #>  [2,]     0     0     0     0     0     0 #>  [3,]     0     0     0     0     0     0 #>  [4,]     0     0     0     0     0     0 #>  [5,]     0     0     0     0     0     0 #>  [6,]     0     0     0     0     0     0 #>  [7,]     0     0     0     0     0     0 #>  [8,]     0     0     0     0     0     0 #>  [9,]     0     0     0     0     0     0 #> [10,]     0     0     0     0     0     0 #> [11,]     0     0     0     0     0     0 #> [12,]     0     0     0     0     0     0 #> [13,]     0     0     0     0     0     0 #> [14,]     0     0     0     0     0     0 #> [15,]     0     0     0     0     0     0 #> [16,]     0     0     0     0     0     0 #> [17,]     0     0     0     0     0     0 #> [18,]     0     0     0     0     0     0 #> [19,]     0     0     0     0     0     0 #> [20,]     0     0     0     0     0     0 #> [21,]     0     0     0     0     0     0 #> [22,]     0     0     0     0     0     0 #> [23,]     0     0     0     0     0     0 #> [24,]     0     0     0     0     0     0 #> [25,]     0     0     0     0     0     0 #> [26,]     0     0     0     0     0     0 #> [27,]     0     0     0     0     0     0 #> [28,]     0     0     0     0     0     0 #> [29,]     0     0     0     0     0     0 #> [30,]     0     0     0     0     0     0 #> [31,]     0     0     0     0     0     0 #> [32,]     0     0     0     0     0     0 #> [33,]     0     0     0     0     0     0 #> [34,]     0     0     0     0     0     0 #> [35,]     0     0     0     0     0     0 #> [36,]     0     0     0     0     0     0 #> [37,]     0     0     0     0     0     0 #> [38,]     0     0     0     0     0     0 #> [39,]     0     0     0     0     0     0 #> [40,]     0     0     0     0     0     0 #> [41,]     0     0     0     0     0     0 #> [42,]     0     0     0     0     0     0 #> [43,]     0     0     0     0     0     0 #> [44,]     0     0     0     0     0     0 #> [45,]     0     0     0     0     0     0 #> [46,]     0     0     0     0     0     0 #> [47,]     0     0     0     0     0     0 #> [48,]     0     0     0     0     0     0 #> [49,]     0     0     0     0     0     0 #> [50,]     0     0     0     0     0     0 #> [51,]     0     0     0     0     0     0 #> [52,]     0     0     0     0     0     0 #> [53,]     0     0     0     0     0     0 #> [54,]     0     0     0     0     0     0 #> [55,]     0     0     0     0     0     0 #> [56,]     0     0     0     0     0     0 #> [57,]     0     0     0     0     0     0 #> [58,]     0     0     0     0     0     0 #> [59,]     0     0     0     0     0     0 #> [60,]     0     0     0     0     0     0 #> [61,]     0     0     0     0     0     0 #> [62,]     0     0     0     0     0     0 #> [63,]     0     0     0     0     0     0 #> [64,]     0     0     0     0     0     0 #> [65,]     0     0     0     0     0     0 #> [66,]     0     0     0     0     0     0 #> [67,]     0     0     0     0     0     0 #> [68,]     0     0     0     0     0     0 #> [69,]     0     0     0     0     0     0 #> [70,]     0     0     0     0     0     0 #> [71,]     0     0     0     0     0     0 #> [72,]     0     0     0     0     0     0 #> [73,]     0     0     0     0     0     0 #> [74,]     0     0     0     0     0     0 #> [75,]     0     0     0     0     0     0 #> [76,]     0     0     0     0     0     0  # Visualize midpoints of bins over u print(binned_data$bins$midu) #>  [1]   23   53   83  113  143  173  203  233  263  293  323  353  383  413  443 #> [16]  473  503  533  563  593  623  653  683  713  743  773  803  833  863  893 #> [31]  923  953  983 1013 1043 1073 1103 1133 1163 1193 1223 1253 1283 1313 1343 #> [46] 1373 1403 1433 1463 1493 1523 1553 1583 1613 1643 1673 1703 1733 1763 1793 #> [61] 1823 1853 1883 1913 1943 1973 2003 2033 2063 2093 2123 2153 2183 2213 2243 #> [76] 2273   # Bin data over u = time at recurrence and s = time since recurrence, measured in day # individual-level data required # we provide two covariates: nodes (numerical) and rx (factor) covs <- subset(reccolon2ts, select = c(\"nodes\", \"rx\")) binned_data <- prepare_data(   u = reccolon2ts$timer, s_out = reccolon2ts$timesr,   events = reccolon2ts$status, ds = 30, individual = TRUE, covs = covs ) #> `s_in = NULL`. I will use `s_in = 0` for all observations. #> `s_in = NULL`. I will use `s_in = 0` for all observations.  # Visualize structure of binned data print(str(binned_data$bindata)) #> List of 3 #>  $ R: num [1:76, 1:91, 1:461] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Y: num [1:76, 1:91, 1:461] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Z: num [1:461, 1:3] 5 7 6 22 9 5 1 3 1 6 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:3] \"nodes\" \"Lev\" \"Lev_5FU\" #> NULL"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/prepare_data_LMMsolver.html","id":null,"dir":"Reference","previous_headings":"","what":"Process data to fit model with LMMsolver — prepare_data_LMMsolver","title":"Process data to fit model with LMMsolver — prepare_data_LMMsolver","text":"Process data fit model LMMsolver","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/prepare_data_LMMsolver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process data to fit model with LMMsolver — prepare_data_LMMsolver","text":"","code":"prepare_data_LMMsolver(Y = Y, R = R, Z = NULL, bins = bins)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/prepare_data_LMMsolver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process data to fit model with LMMsolver — prepare_data_LMMsolver","text":"Y matrix (3d-array) event counts dimension nu ns (nu ns n). R matrix (3d-array) exposure times dimension nu ns (nu ns n). Z (optional) regression matrix covariates values dimensions n p. bins list specification bins. created function prepare_data. list prepared externally function provided, contain following elements: * bins_u vector bins extremes time scale u. * midu vector midpoints bins u. * nu number bins u. * bins_s vector bins extremes time scale s. * mids vector midpoints bins s. * ns number bins s.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/prepare_data_LMMsolver.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process data to fit model with LMMsolver — prepare_data_LMMsolver","text":"dataset long form fit model LMMsolver","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/print.data2ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for a data2ts object — print.data2ts","title":"Print method for a data2ts object — print.data2ts","text":"Print method object class data2ts","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/print.data2ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for a data2ts object — print.data2ts","text":"","code":"# S3 method for class 'data2ts' print(x, ...)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/print.data2ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for a data2ts object — print.data2ts","text":"x class data2ts, prepared prepare_data ... arguments print","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/print.data2ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for a data2ts object — print.data2ts","text":"return value","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/print.data2ts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print method for a data2ts object — print.data2ts","text":"Angela Carollo carollo@demogr.mpg.de","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/print.data2ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for a data2ts object — print.data2ts","text":"","code":"# Bin the colon cancer data over s (time since recurrence)  colon1ts <- prepare_data(s_in = reccolon2ts$entrys, s_out = reccolon2ts$timesr, events = reccolon2ts$status, ds = 30)  print(colon1ts) #> An object of class 'data2ts' #>  #> Data: #> List of 2 #>  $ bins   :List of 3 #>  $ bindata:List of 2 #>  - attr(*, \"class\")= chr \"data2ts\" #> NULL #>  #> Range covered by the bins:  #> $bins_s #> [1]    0 2730 #>  #>  #> Number of bins:  #> $ns #> [1] 91 #>  #>  #> Overview of the binned data: #> [1] \"Total exposure time: 236006\" #>  #> [1] \"Total number of events: 409\"  # Bin the colon cancer data over u (time at recurrence) and s (time since recurrence) colon2ts <- prepare_data( u = reccolon2ts$timer, s_in = reccolon2ts$entrys, s_out = reccolon2ts$timesr, events = reccolon2ts$status, ds = 30)  print(colon2ts) #> An object of class 'data2ts' #>  #> Data: #> List of 2 #>  $ bins   :List of 6 #>  $ bindata:List of 2 #>  - attr(*, \"class\")= chr \"data2ts\" #> NULL #>  #> Range covered by the bins:  #> $bins_u #> [1]    8 2288 #>  #> $bins_s #> [1]    0 2730 #>  #>  #> Number of bins:  #> $nu #> [1] 76 #>  #> $ns #> [1] 91 #>  #>  #> Overview of the binned data: #> [1] \"Total exposure time: 236006\" #>  #> [1] \"Total number of events: 409\""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/reccolon2ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from the chemotherapy for stace B/C colon cancer study — reccolon2ts","title":"Data from the chemotherapy for stace B/C colon cancer study — reccolon2ts","text":"dataset reduced version dataset colon package survival (Therneau, T.M. et al., 2022). observation transition recurrence colon cancer death censoring. time scales time randomization recurrence, time randomization death censoring time recurrence cancer. original data individuals observed state 'recurrence' right entry state, , data left truncated. able illustrate include left truncated times model, artificial left truncated entry 'recurrence' state introduced 40 individuals. Additionally, 7 individuals exit risk set equal entry recurrence state (0 exposure time) dropped sample.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/reccolon2ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from the chemotherapy for stace B/C colon cancer study — reccolon2ts","text":"","code":"data(reccolon2ts)"},{"path":[]},{"path":"https://angelacar.github.io/TwoTimeScales/reference/reccolon2ts.html","id":"reccolon-ts-a-data-table-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"reccolon2ts A data.table with 461 rows and 25 columns:","title":"Data from the chemotherapy for stace B/C colon cancer study — reccolon2ts","text":"id patient's id study 1 patients rx Treatment - Obs(ervation), Lev(amisole), Lev(amisole)+5-FU sex 1=male, 0=female age Age transplant years obstruct obstruction colon tumor: 1=yes perfor perforation colon: 1=yes adhere adherence nearby organs: 1=yes nodes number lymph nodes detectable cancer status censoring status: 0=censoring, 1=event differ differentiation tumour: 1=well, 2=moderate, 3=poor extent extent local spread: 1=submucosa, 2=muscle, 3=serosa, 4=contigous structures surg time surgery registration: 0=short, 1=long node4 4 positive lymph nodes etype 2 patients (2=death) timedc time days randomization death censoring timer time days randomization recurrence timesr time days recurrence death censoring entrys artificial entry time time since recurrence scale. individual 0 (left truncation). 40 individuals random number 1 exit time time since recurrence scale (timesr) simulated. entryt time days randomization observation recurrence state. individual observed entry recurrence state equal time recurrence. entry recurrence state observed beginning, left truncation observed. present original data, introduced artificially 40 individuals. done first increasing time recurrence random number 1 exit time time since recurrence scale. , time recurrence added artificial entry time. timedc_y time years randomization death censoring timer_y time years randomization recurrence entrys_y left truncated entry recurrence state measured years since recurrence entryt_y left truncated entry recurrence state measured years since randomization timesr_y time years recurrence death censoring","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/reccolon2ts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from the chemotherapy for stace B/C colon cancer study — reccolon2ts","text":"Therneau, T. (2023). Package Survival Analysis R. R package version 3.5-3, https://CRAN.R-project.org/package=survival","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/reccolon2ts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data from the chemotherapy for stace B/C colon cancer study — reccolon2ts","text":"Moertel, C.G, et al. (1995). Fluorouracil plus Levamisole Effective Adjuvant Theraphy Resection Stage III Colon Carcinoma: Final Report. Annals Internal Medicine, 122:321-326 Moerel, C.G., et al. (1990). Levamisole Fluorouracil Adjvant Theraphy Resected Colon Carcinoma. New England Journal Medicine, 322:352-8","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/reccolon2ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data from the chemotherapy for stace B/C colon cancer study — reccolon2ts","text":"","code":"data(reccolon2ts)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/surv2ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival surface (cause-specific) and overall survival with two time scales — surv2ts","title":"Survival surface (cause-specific) and overall survival with two time scales — surv2ts","text":"Computes cause-specific survival estimates two time scales list cause-specific cumulated hazard matrices. matrix cause-specific survival calculated \\(\\exp(-CumHaz)\\). Additionally, user provides one cause-specific cumulated hazard, function computes overall survival matrix, contains probability experiencing event cause time s fixed time entry u.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/surv2ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival surface (cause-specific) and overall survival with two time scales — surv2ts","text":"","code":"surv2ts(cumhaz = list(), cause = NULL)"},{"path":"https://angelacar.github.io/TwoTimeScales/reference/surv2ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival surface (cause-specific) and overall survival with two time scales — surv2ts","text":"cumhaz list cause-specific cumulated hazard matrices (minimum one element needs supplied). one cause-specific cumulated hazard provided, matrices dimension. cause optional vector short names causes. length number cause-specific cumulated hazards provided.","code":""},{"path":"https://angelacar.github.io/TwoTimeScales/reference/surv2ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival surface (cause-specific) and overall survival with two time scales — surv2ts","text":"list varying length. one cumulated hazard provided input, function calculate one two-dimensional survival surface. output list one element. K (K>1) cumulated hazards supplied, output list K+1 elements: * first K elements K cause-specific survival estimates; vector short names causes passed argument cause, used name elements output; * OverSurv overall two-dimensional survival surface.","code":""}]
