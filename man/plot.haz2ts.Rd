% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.haz2ts.R
\name{plot.haz2ts}
\alias{plot.haz2ts}
\title{Plot method for a haz2ts object.}
\usage{
\method{plot}{haz2ts}(
  x,
  plot_grid = NULL,
  which_plot = c("hazard", "covariates", "SE", "slices"),
  where_slices = NULL,
  direction = c(NULL, "u", "s"),
  plot_options = list(),
  ...
)
}
\arguments{
\item{x}{The output of the function \code{fit2ts}. This is an object of
class \code{"haz2ts"}.}

\item{plot_grid}{(optional) A list containing the parameters to build a new
finer grid of intervals over u and s for plotting. This must be of the
form: \code{plot_grid = list(c(umin, umax, du), c(smin, smax, ds))}, where
\code{umin}, \code{umax} and \code{smin}, \code{smax} are the minimum and maximum values
desired for the intervals over \code{u} and \code{s} respectively, and \code{du}, \code{ds} are
distances between intervals over \code{u} and \code{s} respectively. Specifying a new
denser grid is used to evaluate the B-spline bases used for estimation on
such grid and plot the estimated surfaces with a greater level of details.
If not specified, the plotting is done using the same B-splines bases as
for the estimation. The function will check if the parameters for the grid
provided by the user are compatible with those originally used to construct
the B-splines for estimating the model. If not, the grid will be adjusted
accordingly and a warning will be returned.}

\item{which_plot}{The type of plot required. Can be one of \code{"hazard"}
(default), \code{"covariates"}, \code{"SE"} or \code{"slices"}.}

\item{where_slices}{A vector of values for the cutting points of the desired
slices of the surface. If \code{which_plot == "slices"}, please provide this
argument.}

\item{direction}{If \code{which_plot == "slices"}, indicates the direction for
cutting the surface. If \code{u}, then the surface will be cut at the selected
values of \code{u} (indicated by \code{where_slices}), hence obtaining one-dimensional
curves over \code{s}. If \code{s}, then the surface will be cut at the selected values
of \code{s} (indicated by \code{where_slices}), hence obtaining one-dimensional curves
over \code{u}.}

\item{plot_options}{A list with all possible options for any of the plots:
\itemize{
\item \code{loghazard} A Boolean. Default is \code{FALSE}. If \code{FALSE} the function
returns a plot of the hazard surface, if \code{TRUE} the function returns
a plot of the log-hazard surface.
\item \code{log10hazard} A Boolean. Default is \code{FALSE}. If \code{TRUE},
then a log_10 hazard surface is plotted.
\item \code{cut_extrapolated} A Boolean. Default is \code{TRUE}. Cuts away the
extrapolated area of the (log-)hazard surface before plotting.
\item \code{rectangular_grid} A Boolean. Default is \code{FALSE}. If \code{TRUE}, a
rectangular grid is used for plotting also in the (t,s)-plane as opposed
to the grid of parallelograms used as default in the (t,s)-plane.
\item \code{original} A Boolean. Default is \code{TRUE}. Plot the (log-)hazard (and/or
the SEs) in the (t,s)-plane. If \code{FALSE}, the (log-)hazard (and/or the SEs)
will be plotted in the (u,s)-plane.
\item \code{tmax} The maximum value of \code{t} that should be plotted.
\item \code{col_palette} A function defining the color palette. The default palette
is \code{viridis::rev(plasma())}. Specifying the color palette as a function
allows for greater flexibility than passing the palette as a vector.
We provide an example on how to create a function from any color palette
below.
\item \code{n_shades} The number of color shades to plot, default is 50.
\item \code{breaks} The vector of breaks for the color legend. If \code{n_shades} is provided,
this should be of length \code{n_shades + 1}.
\item \code{show_legend} A Boolean. Default is \code{TRUE}. If \code{FALSE} no legend will be
plotted, useful for multi-panel figures with common legend. Works only
for plots on rectangular grid (i.e. transformed (u,s) plane)
\item \code{main} The title of the plot.
\item \code{xlab} The label of the first time axis (plotted on the x axis).
\item \code{ylab} The label of the second time axis (plotted on the y axis).
\item \code{xlim} A vector with two elements defining the limits of the time scale
on the x axis.
\item \code{ylim} A vector with two elements defining the limits of the time scale
on the y axis.
\item \code{contour_lines} A Boolean. Default is \code{FALSE}. If \code{TRUE} white contour
lines are added to the surfaces.
\item \code{contour_col} The color for the contour lines. Default is \code{white}.
\item \code{contour_cex} The magnification to be used for the contour lines.
Default is \code{.8}.
\item \code{contour_nlev} The number of contour levels desired. Default is 10.
\item \code{cex_main} The magnification to be used for the main title, default is 1.2 .
\item \code{cex_lab} The magnification to be used for the axis labels, default is 1 .
\item \code{HR} A Boolean. If \code{TRUE} the HRs with their CIs will be plotted.
Default is \code{FALSE} (plot the \code{beta} with their CIs).
\item \code{symmetric_CI} A Boolean. Default is \code{TRUE}. If a plot of the HRs is
required (\code{HR == TRUE}), then plot symmetrical Confidence Intervals,
based on the SEs for the HRs calculated by delta method.
If \code{FALSE}, then CIs are obtained by exponentiating the CIs for the betas.
\item \code{confidence} The level of confidence for the CIs. Default is .95 (alpha
= 0.05).
\item \code{col_beta} The color for the plot of the covariates' effects.
\item \code{pch} The symbol for plotting the point estimates.
\item \code{lwd} The line width.
}}

\item{\dots}{Further arguments to image.plot or image}
}
\value{
A plot of the fitted model.
}
\description{
\code{plot.haz2ts()} is the plot method for objects of class \code{haz2ts}.
It produces plots of the fitted model with two
time scales (see \code{\link[=fit2ts]{fit2ts()}}), either in the original (t,s) plane, while respecting the
constraint imposed by the relation of the two time scales, or in the
transformed (u,s) plane.
}
\examples{
# Create a color pallete function from a RColorBrewer palette, using the function
# colorRampPalette from grDevices.
\dontrun{
  mypal <- function(n){
           colorRampPalette(RColorBrewer::brewer.pal(9, "YlGnBu"))(n)
           }
  # if mod_haz is a fitted model of class haz2ts, the following code will
  # produce a cross-sections plot of the hazard over `s` for selected values
  # of `u`, with the palette specified above

  plot(mod_haz,
       which_plot = "slices",
       where_slices = c(30, 60, 90, 180, 365, 1000, 2000),
       direction = "u",
       plot_options = list(col_palette = mypal,
                           main = "Cross-sections of the hazard",
                           xlab = "Time since recurrence",
                           ylab = "Hazard"))
}


}
